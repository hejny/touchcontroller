{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rxjs/Observable.js","webpack:///./src/Vector2.ts","webpack:///./node_modules/rxjs/Subscriber.js","webpack:///./node_modules/rxjs/Subscription.js","webpack:///./node_modules/rxjs/add/operator/share.js","webpack:///./src/Transformation.ts","webpack:///./src/BoundingBox.ts","webpack:///./src/Touch.ts","webpack:///./node_modules/rxjs/util/root.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/rxjs/symbol/rxSubscriber.js","webpack:///./src/TouchFrame.ts","webpack:///./src/particles/Particle.ts","webpack:///./src/tools/svgTools.ts","webpack:///./node_modules/rxjs/util/isFunction.js","webpack:///./node_modules/rxjs/util/errorObject.js","webpack:///./node_modules/rxjs/Observer.js","webpack:///./node_modules/rxjs/Subject.js","webpack:///./node_modules/rxjs/operators/refCount.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./src/multiTouchTransformations.ts","webpack:///./src/listeners/createMouseListener.ts","webpack:///./src/listeners/createTouchListener.ts","webpack:///./src/index.ts","webpack:///./src/particles/CanvasParticlesRenderer.ts","webpack:///./src/particles/Scene.ts","webpack:///./src/tools/mathTools.ts","webpack:///./src/tools/imageTools.ts","webpack:///./node_modules/rxjs/util/toSubscriber.js","webpack:///./node_modules/rxjs/util/isArray.js","webpack:///./node_modules/rxjs/util/isObject.js","webpack:///./node_modules/rxjs/util/tryCatch.js","webpack:///./node_modules/rxjs/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/symbol/observable.js","webpack:///./node_modules/rxjs/util/pipe.js","webpack:///./node_modules/rxjs/util/noop.js","webpack:///./node_modules/rxjs/operator/share.js","webpack:///./node_modules/rxjs/operators/share.js","webpack:///./node_modules/rxjs/operators/multicast.js","webpack:///./node_modules/rxjs/observable/ConnectableObservable.js","webpack:///./node_modules/rxjs/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/SubjectSubscription.js","webpack:///./node_modules/rxjs/add/observable/range.js","webpack:///./node_modules/rxjs/observable/range.js","webpack:///./node_modules/rxjs/observable/RangeObservable.js","webpack:///./src/MultiTouchController.ts","webpack:///./src/MultiTouch.ts","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/rxjs/add/operator/finally.js","webpack:///./node_modules/rxjs/operator/finally.js","webpack:///./node_modules/rxjs/operators/finalize.js","webpack:///./src/TouchController.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","root_1","toSubscriber_1","observable_1","pipe_1","Observable","subscribe","this","_isScalar","_subscribe","lift","operator","observable","source","observerOrNext","error","complete","sink","toSubscriber","add","_trySubscribe","syncErrorThrowable","syncErrorThrown","syncErrorValue","err","forEach","next","PromiseCtor","_this","root","Rx","config","Promise","Error","resolve","reject","subscription","unsubscribe","subscriber","pipe","operations","_i","arguments","length","pipeFromArray","toPromise","x","Vector2","y","isNaN","Zero","One","clone","vectors","reduce","vector2","addInPlace","_a","vectors_1","vector","subtract","subtractInPlace","scale","scaleInPlace","Math","sqrt","pow","rotation","atan2","rotate","radians","base","cos","sin","toArray","toString","fromTopLeft","boundingBox","left","top","__extends","b","__","constructor","isFunction_1","Subscription_1","Observer_1","rxSubscriber_1","Subscriber","_super","destinationOrNext","isStopped","destination","empty","SafeSubscriber","rxSubscriber","_next","_error","_complete","closed","_unsubscribeAndRecycle","_parent","_parents","Subscription","_parentSubscriber","context","isFunction","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","fn","parent","_unsubscribe","isArray_1","isObject_1","tryCatch_1","errorObject_1","UnsubscriptionError_1","_subscriptions","errors","hasErrors","index","len","remove","tryCatch","errorObject","e","UnsubscriptionError","flattenUnsubscriptionErrors","isArray","sub","isObject","concat","push","teardown","EMPTY","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","errs","Observable_1","share_1","share","Vector2_1","svgTools_1","Transformation","translate","rotateCenter","Neutral","undefined","cloneDeep","transformation","PI","applyOnElement","element","tagName","applyOnSvgElement","applyOnHtmlElement","style","parseFloat","transformationStringBefore","getAttribute","transformationAfter","svgTransformationDecode","transformationStringAfter","svgTransformationEncode","setAttribute","Transformation_1","BoundingBox","center","size","fromMinMax","maxx","maxy","minx","miny","applyTransformation","intersects","position","position1r","position2r","grow","amount","isIn","outerBoard","topLeft","topRight","bottomLeft","bottomRight","countTransformation","destinationBoundingBox","redrawToElement","boundingBoxElement","display","zIndex","border","width","height","transform","TouchFrame_1","Touch","type","anchorElement","firstFrame","lastFrame","lastFrame2","frames","observer","_framesObserver","move","newFrame","end","time","Click","touch","TouchFrame","setTimeout","__window","window","__self","self","WorkerGlobalScope","_root","global","g","Function","eval","for","$$rxSubscriber","positionRelative","rotating","force","radius","performance","now","offset","getBoundingClientRect","mathTools_1","imageTools_1","Particle","options","shapeData","initializeSource","createColoredCanvasFromSrc","shapeSrc","color","_b","sent","current","widthSize","movement","update","delta","frictionPowered","friction","render","ctx","save","drawImage","shapeCenter","restore","compare","a","sign","TRANSFORM","TRANSLATE","ROTATE","lastIndex","transforms","execPart","exec","map","part","test","angleDegrees","console","warn","Subscriber_1","ObjectUnsubscribedError_1","SubjectSubscription_1","SubjectSubscriber","Subject","observers","hasError","thrownError","subject","AnonymousSubject","ObjectUnsubscribedError","copy","slice","SubjectSubscription","asObservable","refCount","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","scope","apply","Timeout","id","clearFn","_id","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","BoundingBox_1","multiTouchTransformations","multiTouch","ongoingTouchesChanges","touches","subscriptions_1","countTouchesTransformation","lastTouchesTransformation","touch1","touchMoveCallback","currentTouchesTransformation","deltaTransformation","Touch_1","onlyTouch","createMouseListener","buttons","newTouch","newHoverFrame","addEventListener","event","button","preventDefault","stopPropagation","currentTouch","_createTouchFrameFromEvent","document","_handleMouseMoveOnDocument","mouseUpListenerOnDocument_1","removeEventListener","_handleMouseDownOnElement","_handleMouseMoveOnElement","boundingRect","clientX","clientY","createTouchListener","changedTouches","currentTouches","identifier","_handleTouchesStart","_handleTouchesMove","_handleTouchesEnd","CanvasParticlesRenderer_1","CanvasParticlesRenderer","MultiTouchController_1","MultiTouchController","TouchController_1","TouchController","multiTouchTransformations_1","createMouseListener_1","createTouchListener_1","Scene_1","Particle_1","quality","initialColor","canvas","deadParticlesCount","_contexts","_subscribers","lastRenderNow","createElement","liveCtx","getContext","deadCtx","fillStyle","fillRect","scene","Scene","requestAnimationFrame","addContext","callback","callSubscribers","drawPoint","particle","addObject","drawLine","position2","segmentSize","position1","segments","ceil","positionAdd","positionCurrent","particleOptions","JSON","parse","stringify","particles","deadParticles","sort","_c","live","dead","NaN","createImageFromSrc","src","image","createCanvasFromSrc","imageData","getImageData","data","rgbColor","replace","result","parseInt","hexToRgb","putImageData","nextOrObserver","Array","tryCatchTarget","tryCatcher","join","stack","message","getSymbolObservable","$$observable","noop_1","fns","input","prev","noop","multicast_1","refCount_1","Subject_1","shareSubjectFactory","multicast","ConnectableObservable_1","subjectOrSubjectFactory","selector","subjectFactory","MulticastOperator","connectableObservableDescriptor","ConnectableObservable","_isComplete","getSubject","_subject","ConnectableSubscriber","connectableProto","writable","subscriberIndex","range_1","range","RangeObservable_1","RangeObservable","start","count","scheduler","_count","dispatch","state","schedule","MultiTouch_1","touchController","_elementBinder","ongoingMultiTouches","multiTouches","_multiTouchesObserver","filter","MultiTouch","multiTouch2","addTouch","hoveredFrames","frame","lastElement","hoveredElements","thisElement","firstTouch","ongoingTouches","_touchesObserver","touch2","transformations","process","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","random","onGlobalMessage","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","args","task","run","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","array","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","finally_1","finally","_finally","finalize_1","finalize","FinallyOperator","FinallySubscriber","elements","setListeners","_hoveredFramesObserver","fromCanvas","listener","callListenerOnElement","addElement","emulateTouch"],"mappings":"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","file":"touchcontroller.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\nvar pipe_1 = require('./util/pipe');\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","//todo to other my library - combine TC, Vire\nexport class Vector2 {\n    constructor(public x: number, public y: number) {\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error(\n                `Vector2(${x},${y}) can not be created due to NaN values.`,\n            );\n        }\n    }\n\n    static Zero() {\n        return new Vector2(0, 0);\n    }\n\n    static One() {\n        return new Vector2(1, 1);\n    }\n\n    clone(): Vector2 {\n        return new Vector2(this.x, this.y);\n    }\n\n    //todo consolidate 2 add methods and 1 static method\n    add(...vectors: Vector2[]): Vector2 {\n        return new Vector2(\n            vectors.reduce((x, vector2) => x + vector2.x, this.x),\n            vectors.reduce((y, vector2) => y + vector2.y, this.y),\n        );\n    }\n\n    addInPlace(...vectors: Vector2[]): this {\n        //todo void vs. never\n        for (const vector of vectors) {\n            this.x += vector.x;\n            this.y += vector.y;\n        }\n        return this;\n    }\n\n    static add(...vectors: Vector2[]) {\n        return new Vector2(\n            vectors.reduce((x, vector2) => x + vector2.x, 0),\n            vectors.reduce((y, vector2) => y + vector2.y, 0),\n        );\n    }\n\n    subtract(vector2: Vector2): Vector2 {\n        return new Vector2(this.x - vector2.x, this.y - vector2.y);\n    }\n\n    subtractInPlace(vector2: Vector2): this {\n        this.x -= vector2.x;\n        this.y -= vector2.y;\n        return this;\n    }\n\n    scale(scale: number): Vector2 {\n        return new Vector2(this.x * scale, this.y * scale);\n    }\n\n    scaleInPlace(scale: number): this {\n        this.x *= scale;\n        this.y *= scale;\n        return this;\n    }\n\n    length(vector2: Vector2 = Vector2.Zero()): number {\n        return Math.sqrt(\n            Math.pow(this.x - vector2.x, 2) + Math.pow(this.y - vector2.y, 2),\n        );\n    }\n\n    rotation(vector2: Vector2 = Vector2.Zero()): number {\n        return Math.atan2(this.y - vector2.y, this.x - vector2.x);\n    }\n\n    rotate(radians: number, vector2: Vector2 = Vector2.Zero()) {\n        const base = this.subtract(vector2);\n        const length = base.length();\n        const rotation = base.rotation();\n        return new Vector2(\n            Math.cos(rotation + radians) * length,\n            Math.sin(rotation + radians) * length,\n        ).add(vector2);\n    }\n\n    toArray(): [number, number] {\n        return [this.x, this.y];\n    }\n\n    toString(): string {\n        return `[${this.x}, ${this.y}]`;\n    }\n\n    static fromTopLeft(boundingBox: { top: number; left: number }) {\n        return new Vector2(boundingBox.left, boundingBox.top);\n    }\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar share_1 = require('../../operator/share');\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map","import { Vector2 } from './Vector2';\nimport {\n    svgTransformationDecode,\n    svgTransformationEncode,\n} from './tools/svgTools';\n\nexport class Transformation {\n    constructor(\n        public translate: Vector2 = Vector2.Zero(),\n        public rotate: number = 0,\n        public rotateCenter: Vector2 = Vector2.Zero(),\n        public scale: number = 1,\n    ) {}\n\n    static Neutral(): Transformation {\n        return new Transformation();\n    }\n\n    static translate(translate: Vector2): Transformation {\n        return new Transformation(translate);\n    }\n\n    static rotate(rotate: number): Transformation {\n        return new Transformation(undefined, rotate);\n    }\n\n    static scale(scale: number): Transformation {\n        return new Transformation(undefined, undefined, undefined, scale);\n    }\n\n    clone(): Transformation {\n        return new Transformation(\n            this.translate,\n            this.rotate,\n            this.rotateCenter,\n            this.scale,\n        );\n    }\n\n    cloneDeep(): Transformation {\n        return new Transformation(\n            this.translate.clone(),\n            this.rotate,\n            this.rotateCenter.clone(),\n            this.scale,\n        );\n    }\n\n    //todo in place methods\n    add(transformation: Transformation): Transformation {\n        return new Transformation(\n            this.translate.add(transformation.translate),\n            (this.rotate + transformation.rotate) % (Math.PI * 2),\n            this.rotateCenter.add(transformation.rotateCenter), //todo is it correct\n            this.scale * transformation.scale,\n        );\n    }\n\n    subtract(transformation: Transformation): Transformation {\n        return new Transformation(\n            this.translate.subtract(transformation.translate),\n            (this.rotate - transformation.rotate + Math.PI * 2) % (Math.PI * 2),\n            this.rotateCenter.subtract(transformation.rotateCenter), //todo is it correct\n            this.scale / transformation.scale,\n        );\n    }\n\n    //todo maybe move to other function\n    applyOnElement(element: Element) {\n        switch (element.tagName) {\n            case 'g':\n                this.applyOnSvgElement(element as SVGGElement);\n                break;\n            default:\n                this.applyOnHtmlElement(element as HTMLElement);\n        }\n    }\n\n    applyOnHtmlElement(element: HTMLElement) {\n        element.style.left =\n            parseFloat(element.style.left || '0px') + this.translate.x + 'px'; //todo bounding box as default\n        element.style.top =\n            parseFloat(element.style.top || '0px') + this.translate.y + 'px';\n    }\n\n    applyOnSvgElement(element: SVGGElement) {\n        /*element.setAttribute(\n            'transform',\n            vectorToTranslate(\n                translateToVector(\n                    element.getAttribute('transform') || undefined,\n                ).add(this.translate),\n            ),\n        );\n        console.groupCollapsed('applyOnSvgElement');\n        console.log('this',this);\n        console.log('element',element);*/\n\n        const transformationStringBefore =\n            element.getAttribute('transform') || '';\n        const transformationBefore = svgTransformationDecode(\n            transformationStringBefore,\n        );\n\n        const transformationAfter = transformationBefore.add(this);\n        const transformationStringAfter = svgTransformationEncode(\n            transformationAfter,\n        );\n\n        element.setAttribute('transform', transformationStringAfter);\n\n        /*\n        console.log('transformationBefore',transformationBefore);\n        console.log('transformationAfter',transformationAfter);\n\n        console.log('transformationStringBefore',transformationStringBefore);\n        console.log('transformationStringAfter',transformationStringAfter);\n\n        console.log('check',element.getAttribute('transform'));\n\n\n        console.groupEnd();\n        */\n    }\n}\n\n/*setImmediate(() => {\n    const element = document.getElementsByTagName('g')[0];\n    const transformation = Transformation.rotate(0.2);\n\n    console.log('element', element);\n    console.log('transformation', transformation);\n\n    const interval = setInterval(() => {\n        transformation.applyOnSvgElement(element);\n    }, 100);\n\n    setTimeout(() => {\n        clearInterval(interval);\n    }, 1000);\n});\n*/\n","import { Vector2 } from './Vector2';\nimport { Transformation } from './Transformation';\n//todo to other my library - combine TC, Vire\n\nexport class BoundingBox {\n    constructor(\n        public center: Vector2 = Vector2.Zero(),\n        public size: Vector2 = Vector2.One(),\n        public rotation: number = 0,\n    ) {}\n\n    static One() {\n        return new BoundingBox();\n    }\n\n    static fromMinMax(\n        maxx: number,\n        maxy: number,\n        minx: number,\n        miny: number,\n        rotation: number,\n    ) {\n        return new BoundingBox(\n            new Vector2((maxx + minx) / 2, (maxy + miny) / 2),\n            new Vector2(maxx - minx, maxy - miny),\n            rotation,\n        );\n    }\n\n    clone() {\n        return new BoundingBox(this.center, this.size, this.rotation);\n    }\n\n    cloneDeep() {\n        return new BoundingBox(\n            this.center.clone(),\n            this.size.clone(),\n            this.rotation,\n        );\n    }\n\n    applyTransformation(transformation: Transformation) {\n        this.center.addInPlace(transformation.translate);\n        this.size.scaleInPlace(transformation.scale);\n        this.rotation += transformation.rotate;\n    }\n\n    intersects(position: Vector2): boolean {\n        const position1r = this.center;\n        const position2r = position.rotate(-this.rotation, this.center);\n\n        return (\n            position1r.x - this.size.x / 2 <= position2r.x &&\n            position1r.y - this.size.y / 2 <= position2r.y &&\n            position1r.x + this.size.x / 2 >= position2r.x &&\n            position1r.y + this.size.y / 2 >= position2r.y\n        );\n    }\n\n    grow(amount: number) {\n        return new BoundingBox(\n            this.center,\n            new Vector2(this.size.x + amount * 2, this.size.y + amount * 2),\n            this.rotation,\n        );\n    }\n\n    rotate(radians = 0, position = this.center) {\n        this.center = this.center.rotate(radians, position); //todo maybe in place\n        this.rotation += radians;\n    }\n\n    isIn(outerBoard: BoundingBox) {\n        return (\n            outerBoard.intersects(this.topLeft) &&\n            outerBoard.intersects(this.topRight) &&\n            outerBoard.intersects(this.bottomLeft) &&\n            outerBoard.intersects(this.bottomRight)\n        );\n    }\n\n    get topLeft() {\n        return this.center\n            .add(new Vector2(this.size.x * -0.5, this.size.y * -0.5))\n            .rotate(this.rotation, this.center);\n    }\n\n    get topRight() {\n        return this.center\n            .add(new Vector2(this.size.x * 0.5, this.size.y * -0.5))\n            .rotate(this.rotation, this.center);\n    }\n\n    get bottomLeft() {\n        return this.center\n            .add(new Vector2(this.size.x * -0.5, this.size.y * 0.5))\n            .rotate(this.rotation, this.center);\n    }\n\n    get bottomRight() {\n        return this.center\n            .add(new Vector2(this.size.x * 0.5, this.size.y * 0.5))\n            .rotate(this.rotation, this.center);\n    }\n\n    set topLeft(value: Vector2) {\n        this.center = this.center.add(value.subtract(this.topLeft));\n    }\n\n    countTransformation(destinationBoundingBox: BoundingBox) {\n        return new Transformation(\n            destinationBoundingBox.center.subtract(this.center),\n            destinationBoundingBox.rotation - this.rotation,\n            undefined,\n            destinationBoundingBox.size.x / destinationBoundingBox.size.x, //todo better\n        );\n    }\n\n    redrawToElement(boundingBoxElement: HTMLDivElement) {\n        boundingBoxElement.style.display = 'block';\n        boundingBoxElement.style.position = 'fixed';\n        boundingBoxElement.style.zIndex = '9999';\n        boundingBoxElement.style.border = '2px solid red';\n        boundingBoxElement.style.left = this.center.x + 'px';\n        boundingBoxElement.style.top = this.center.y + 'px';\n        boundingBoxElement.style.width = this.size.x + 'px';\n        boundingBoxElement.style.height = this.size.y + 'px';\n        boundingBoxElement.style.transform = `translate(-50%, -50%) rotate(${(this\n            .rotation /\n            Math.PI) *\n            180}deg)`;\n    }\n\n    /*\n    todo\n    collide(boundingBox2: BoundingBox):boolean{\n    }*/\n}\n","import { Vector2 } from './Vector2';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { Observer } from 'rxjs/Observer';\nimport 'rxjs/add/observable/range';\nimport 'rxjs/add/operator/share';\nimport { TouchFrame } from './TouchFrame';\n\nexport class Touch {\n    public frames: Observable<TouchFrame>;\n    private _framesObserver: Observer<TouchFrame>;\n    public lastFrame: TouchFrame;\n    public lastFrame2: TouchFrame; //todo maybe function with offest\n\n    constructor(\n        public type: 'TOUCH' | 'MOUSE', //todo second optional param\n        public anchorElement: HTMLElement,\n        public firstFrame: TouchFrame,\n    ) {\n        this.lastFrame = firstFrame;\n        this.lastFrame2 = firstFrame;\n        this.frames = Observable.create((observer: Observer<TouchFrame>) => {\n            observer.next(firstFrame); //todo maybe setImmediate(()=>\n            this._framesObserver = observer;\n        }).share(); //todo share vs publish\n    }\n\n    move(newFrame: TouchFrame, end = false) {\n        if (typeof this._framesObserver === 'undefined') {\n            return; //todo better;\n        }\n        this.lastFrame2 = this.lastFrame;\n        this.lastFrame = newFrame;\n        this._framesObserver.next(newFrame);\n        if (end) {\n            this.end();\n        }\n    }\n\n    end() {\n        this._framesObserver.complete();\n    }\n\n    get start() {\n        return this.firstFrame.time;\n    }\n\n    toString() {\n        return `Touch`;\n    }\n\n    static Click(\n        element: HTMLElement,\n        anchorElement: HTMLElement,\n        position: Vector2,\n    ): Touch {\n        const touch = new Touch(\n            'MOUSE',\n            anchorElement,\n            new TouchFrame(element, anchorElement, position),\n        );\n        setTimeout(() => {\n            touch.end();\n        }, 100);\n        return touch;\n    }\n\n    /*\n    todo maybe\n    static Rotate(position: Vector2, rotation:number): Touch {\n        const touch = new Touch('MOUSE', new TouchFrame(position));\n        setTimeout(() => {\n            touch.move(new TouchFrame(position,undefined,rotation),true);\n        }, 100);\n        return touch;\n    }\n\n    /*todo\n    static Drag(position1: Vector2, position2: Vector2, duration: number): Touch {\n        const touch = new Touch('MOUSE', new TouchFrame(position1));\n\n        const startTime = performance.now();\n\n        function animationFrame(now: number) {\n\n            const progress = Math.max((now - startTime) / duration, 1);\n\n            const position = Vector2.add(position1.scale(1 - progress), position2.scale(progress));\n            touch.move(new TouchFrame(position));\n\n            console.log(progress,position);\n\n            //if (progress < 1) {\n                requestAnimationFrame(animationFrame);\n            //}else{\n            touch.end();\n            }\n        }\n\n        requestAnimationFrame(animationFrame);\n        return touch;\n    }\n    */\n}\n","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","import { Vector2 } from './Vector2';\n\nexport class TouchFrame {\n    public position: Vector2;\n\n    constructor(\n        public element: HTMLElement,\n        public anchorElement: HTMLElement,\n        public positionRelative: Vector2 = Vector2.Zero(),\n        public time: number = performance.now(),\n        public rotating: boolean = false,\n        public force: number = 0,\n        public radius: Vector2 = Vector2.Zero(),\n    ) {\n        const offset = Vector2.fromTopLeft(\n            element.getBoundingClientRect(),\n        ).subtractInPlace(\n            Vector2.fromTopLeft(anchorElement.getBoundingClientRect()),\n        );\n        this.position = this.positionRelative.add(offset);\n    }\n\n    clone(): TouchFrame {\n        return new TouchFrame(\n            this.element,\n            this.anchorElement,\n            this.positionRelative,\n            this.time,\n            this.rotating,\n            this.force,\n            this.radius,\n        );\n    }\n}\n","import { Vector2 } from './../Vector2';\nimport { sign } from '../tools/mathTools';\nimport { createColoredCanvasFromSrc } from '../tools/imageTools';\n\nexport interface IParticleOptions {\n    shapeSrc: string;\n    shapeCenter: Vector2;\n    color: string;\n    current: IParticleOptionsExternals;\n    movement: IParticleOptionsExternals;\n    friction: number;\n}\n\nexport interface IParticleOptionsExternals {\n    position: Vector2;\n    rotation: number;\n    widthSize: number;\n}\n\nexport class Particle {\n    private shapeData: null | HTMLImageElement | HTMLCanvasElement = null;\n\n    constructor(private options: IParticleOptions, public zIndex: number) {\n        this.initializeSource();\n    }\n\n    async initializeSource() {\n        this.shapeData = await createColoredCanvasFromSrc(\n            this.options.shapeSrc,\n            this.options.color,\n        ); //todo optimize image loads\n    }\n\n    get size() {\n        if (!this.shapeData) {\n            //todo maybe only warn and return width,width\n            throw new Error(`Particle image is not yet loaded.`);\n        }\n\n        return new Vector2(\n            this.options.current.widthSize,\n            (this.options.current.widthSize / this.shapeData.width) *\n                this.shapeData.height,\n        );\n    }\n\n    get live(): boolean {\n        //todo tresshold in config\n        return (\n            this.options.movement.position.length() > 0.5 ||\n            this.options.movement.rotation > 0.5 ||\n            this.options.movement.widthSize > 0.5\n        );\n    }\n\n    update(delta: number) {\n        this.options.current.position.addInPlace(\n            this.options.movement.position.scale(delta),\n        );\n        this.options.current.rotation += this.options.movement.rotation * delta;\n        this.options.current.widthSize +=\n            this.options.movement.widthSize * delta;\n\n        const frictionPowered = Math.pow(this.options.friction, delta);\n        this.options.movement.position.scaleInPlace(frictionPowered);\n        this.options.movement.rotation *= frictionPowered;\n        this.options.movement.widthSize *= frictionPowered; //todo maybe as area\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        if (!this.shapeData) {\n            //todo maybe console.warn(`Particle image is not yet loaded.`);\n            return;\n        }\n\n        ctx.save();\n        ctx.translate(\n            this.options.current.position.x,\n            this.options.current.position.y,\n        );\n        ctx.rotate(this.options.current.rotation + Math.PI / 2);\n        //ctx.globalAlpha = this.lifetime === -1 ? 1 : Math.sqrt(this.lifetime / 10);\n        ctx.drawImage(\n            this.shapeData,\n            0,\n            0,\n            this.shapeData.width,\n            this.shapeData.height,\n            -this.size.x * this.options.shapeCenter.x,\n            -this.size.y * this.options.shapeCenter.y,\n            this.size.x,\n            this.size.y,\n        );\n        ctx.restore();\n    }\n\n    static compare(a: Particle, b: Particle) {\n        return sign(a.zIndex - b.zIndex);\n    }\n}\n","import { Transformation } from '../Transformation';\nimport { Vector2 } from '../Vector2';\n\nconst TRANSFORM = /\\w*\\([^)]*\\)/g;\nconst TRANSLATE = /^translate\\(\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*,?\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*\\)$/g;\nconst ROTATE = /^rotate\\(\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*,?\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*,?\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*\\)$/g;\n\n//todo is (\\-?\\d*\\.?\\d+) correct for number?\n//todo rotate(1.00342672343173e-7,0,0)\n\n//console.log(TRANSLATE.exec('translate(4,84)'));\n//console.log(TRANSLATE.exec('translate(4,84)'));\n\nexport function svgTransformationDecode(\n    transform: string = '',\n): Transformation {\n    let transformation = Transformation.Neutral();\n\n    TRANSFORM.lastIndex = 0;\n    const transforms: string[] = [];\n    let execPart: RegExpExecArray | null = null;\n    while ((execPart = TRANSFORM.exec(transform))) {\n        transforms.push(execPart[0]);\n    }\n\n    if (!transforms) {\n        console.warn(`Can not decode svg transform \"${transform}\".`);\n        return Transformation.Neutral();\n    }\n\n    //console.log('transform => transforms',transform,transforms);\n\n    transforms.map((part) => {\n        TRANSLATE.lastIndex = 0;\n        ROTATE.lastIndex = 0;\n\n        if (TRANSLATE.test(part)) {\n            //console.log(part, TRANSLATE);\n            //console.log(part.match(TRANSLATE));\n            //onsole.log(TRANSLATE.exec(part));\n\n            TRANSLATE.lastIndex = 0;\n            const [full, x, xe, y, ye] = TRANSLATE.exec(part)!.map((n) =>\n                parseFloat(n),\n            );\n            full;\n            xe;\n            ye;\n\n            transformation.translate = new Vector2(x, y);\n        } else if (ROTATE.test(part)) {\n            //console.log(ROTATE.exec(part));\n\n            ROTATE.lastIndex = 0;\n            const [full, angleDegrees, ade, x, xe, y, ye] = ROTATE.exec(\n                part,\n            )!.map((n) => parseFloat(n));\n            full;\n            ade;\n            xe;\n            ye;\n\n            //console.log(full, angleDegrees, ade, x, xe, y, ye);\n\n            transformation.rotate = (angleDegrees / 180) * Math.PI;\n            transformation.rotateCenter = new Vector2(x, y);\n        } else {\n            console.warn(\n                `Unknown part of svg transform \"${part}\".`,\n                TRANSLATE.test(part),\n                ROTATE.test(part),\n            );\n        }\n    });\n\n    return transformation;\n}\n\nexport function svgTransformationEncode(\n    transformation: Transformation,\n): string {\n    const { translate, rotate, rotateCenter } = transformation;\n    return `translate(${translate.x} ${translate.y}) rotate(${(rotate /\n        Math.PI) *\n        180} ${rotateCenter.x} ${rotateCenter.y})`; //todo is it better with spaces or colons?\n}\n","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nexports.refCount = refCount;\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=refCount.js.map","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","import { MultiTouch } from './MultiTouch';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { BoundingBox } from './BoundingBox';\nimport { Transformation } from './Transformation';\nimport { Touch } from './Touch';\nimport { Vector2 } from './Vector2';\n\nexport function multiTouchTransformations<TElement>(\n    multiTouch: MultiTouch<TElement>,\n    boundingBox: BoundingBox = BoundingBox.One(),\n): Observable<Transformation> {\n    return Observable.create((observer: Observer<Transformation>) => {\n        let subscriptions: Subscription[] = [];\n\n        multiTouch.ongoingTouchesChanges.subscribe(\n            (touches) => {\n                for (const subscription of subscriptions) {\n                    subscription.unsubscribe();\n                }\n                //todo maybe subscription = [];\n\n                let countTouchesTransformation: (\n                    ...touches: Touch[]\n                ) => Transformation;\n                if (touches.length === 1) {\n                    if (!touches[0].lastFrame.rotating) {\n                        countTouchesTransformation = (touch1) =>\n                            new Transformation(\n                                touch1.lastFrame.position,\n                                0,\n                                undefined,\n                                1,\n                            );\n                    } else {\n                        //todo this should be like second picked point is center of bounding box\n                        countTouchesTransformation = (touch1) =>\n                            new Transformation(\n                                undefined,\n                                boundingBox.center.rotation(\n                                    touch1.lastFrame.position,\n                                ),\n                                undefined,\n                                1,\n                            );\n                    }\n                } else {\n                    //todo how to figure out with 3, 4, 5,... finger on one object?\n                    countTouchesTransformation = (...touches) =>\n                        new Transformation(\n                            Vector2.Zero()\n                                .add(\n                                    ...touches.map(\n                                        (touch) => touch.lastFrame.position,\n                                    ),\n                                )\n                                .scale(1 / touches.length),\n                            touches[0].lastFrame.position.rotation(\n                                touches[1].lastFrame.position,\n                            ),\n                            undefined,\n                            touches[0].lastFrame.position.length(\n                                touches[1].lastFrame.position,\n                            ),\n                        );\n                }\n\n                let lastTouchesTransformation = countTouchesTransformation(\n                    ...touches,\n                );\n\n                const touchMoveCallback = () => {\n                    const currentTouchesTransformation = countTouchesTransformation(\n                        ...touches,\n                    );\n                    const deltaTransformation = currentTouchesTransformation.subtract(\n                        lastTouchesTransformation,\n                    );\n\n                    boundingBox.applyTransformation(deltaTransformation);\n                    observer.next(deltaTransformation);\n\n                    lastTouchesTransformation = currentTouchesTransformation;\n                };\n\n                subscriptions = touches.map((touch) =>\n                    touch.frames.subscribe(touchMoveCallback),\n                );\n            },\n            () => {},\n            () => {\n                observer.complete();\n            },\n        );\n    });\n}\n","import { TouchFrame } from './../TouchFrame';\nimport { IListener } from './IListener';\nimport { Touch } from '../Touch';\nimport { Vector2 } from '../Vector2';\n\n//todo singleton :(\nlet onlyTouch: Touch | null = null;\n\nexport function createMouseListener(\n    buttons: number[] = [0],\n    rotating = false,\n): IListener {\n    return (\n        element: HTMLElement,\n        anchorElement: HTMLElement,\n        newTouch: (touch: Touch) => void,\n        newHoverFrame: (frame: TouchFrame) => void,\n    ) => {\n        element.addEventListener(\n            'mousedown',\n            (event) => _handleMouseDownOnElement(event),\n            false,\n        );\n\n        element.addEventListener(\n            'mousemove',\n            (event) => _handleMouseMoveOnElement(event),\n            false,\n        );\n\n        //todo configurable mouse buttons\n        element.addEventListener(\n            'contextmenu',\n            (event) => {\n                event.preventDefault();\n                event.stopPropagation();\n            },\n            false,\n        );\n\n        let currentTouch: Touch | null = null;\n\n        function _handleMouseDownOnElement(event: MouseEvent) {\n            if (buttons.indexOf(event.button) !== -1) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                if (onlyTouch) {\n                    onlyTouch.end();\n                }\n                currentTouch = new Touch(\n                    'MOUSE',\n                    anchorElement,\n                    _createTouchFrameFromEvent(event),\n                );\n\n                document.addEventListener(\n                    'mousemove',\n                    _handleMouseMoveOnDocument,\n                    false,\n                );\n\n                const mouseUpListenerOnDocument = () => {\n                    //console.log('mouseup');\n\n                    if (currentTouch) {\n                        currentTouch.end();\n                        currentTouch = null;\n                    }\n\n                    document.removeEventListener(\n                        'mousemove',\n                        _handleMouseMoveOnDocument,\n                    );\n\n                    document.removeEventListener(\n                        'mouseup',\n                        mouseUpListenerOnDocument,\n                    );\n                };\n\n                document.addEventListener(\n                    'mouseup',\n                    mouseUpListenerOnDocument,\n                    false,\n                );\n\n                newTouch(currentTouch);\n                onlyTouch = currentTouch;\n            }\n        }\n\n        function _handleMouseMoveOnDocument(event: MouseEvent) {\n            event.preventDefault();\n            event.stopPropagation();\n            if (currentTouch) {\n                currentTouch.move(_createTouchFrameFromEvent(event), false);\n            }\n        }\n\n        function _handleMouseMoveOnElement(event: MouseEvent) {\n            if (event.buttons > 0) {\n            } else {\n                if (!currentTouch) {\n                    newHoverFrame(_createTouchFrameFromEvent(event));\n                }\n            }\n        }\n\n        function _createTouchFrameFromEvent(event: MouseEvent) {\n            const boundingRect = element.getBoundingClientRect();\n            return new TouchFrame(\n                element,\n                anchorElement,\n                new Vector2(\n                    event.clientX - boundingRect.left,\n                    event.clientY - boundingRect.top,\n                ),\n                performance.now(),\n                rotating,\n            );\n        }\n\n        return () => {\n            //todo return disposer\n        };\n    };\n}\n","import { IListener } from './IListener';\nimport { TouchFrame } from '../TouchFrame';\nimport { Touch } from '../Touch';\nimport { Vector2 } from '../Vector2';\n\nexport function createTouchListener(buttons: number[] = [0]): IListener {\n    return (\n        element: HTMLElement,\n        anchorElement: HTMLElement,\n        newTouch: (touch: Touch) => void,\n        newHoverFrame: (frame: TouchFrame) => void,\n    ) => {\n        element.addEventListener(\n            'touchstart',\n            (event) => _handleTouchesStart(event),\n            false,\n        );\n        element.addEventListener(\n            'touchmove',\n            (event) => _handleTouchesMove(event),\n            false,\n        );\n        element.addEventListener(\n            'touchend',\n            (event) => _handleTouchesEnd(event),\n            false,\n        );\n        element.addEventListener(\n            'touchcancel',\n            (event) => _handleTouchesEnd(event),\n            false,\n        );\n\n        let currentTouches: { [identifier: number]: Touch } = {};\n\n        function _handleTouchesStart(event: TouchEvent) {\n            event.preventDefault();\n            const touches = event.changedTouches;\n            for (let i = 0, l = touches.length; i < l; i++) {\n                const currentTouch = new Touch(\n                    'TOUCH',\n                    anchorElement,\n                    _createTouchFrameFromEvent(touches[i]),\n                );\n                currentTouches[touches[i].identifier] = currentTouch;\n                newTouch(currentTouch);\n            }\n        }\n\n        function _handleTouchesMove(event: TouchEvent) {\n            event.preventDefault();\n            const touches = event.changedTouches;\n            for (let i = 0, l = touches.length; i < l; i++) {\n                const currentTouch =\n                    currentTouches[touches[i].identifier] || null;\n                if (currentTouch) {\n                    currentTouch.move(\n                        _createTouchFrameFromEvent(touches[i]),\n                        false,\n                    );\n                }\n            }\n        }\n\n        function _handleTouchesEnd(event: TouchEvent) {\n            event.preventDefault();\n            const touches = event.changedTouches;\n            for (let i = 0, l = touches.length; i < l; i++) {\n                const currentTouch =\n                    currentTouches[touches[i].identifier] || null;\n                if (currentTouch) {\n                    currentTouch.move(\n                        _createTouchFrameFromEvent(touches[i]),\n                        true,\n                    );\n                    delete currentTouches[touches[i].identifier];\n                }\n            }\n        }\n\n        function _createTouchFrameFromEvent(event: {\n            clientX: number;\n            clientY: number;\n        }) {\n            const boundingRect = element.getBoundingClientRect();\n            return new TouchFrame(\n                element,\n                anchorElement,\n                new Vector2(\n                    event.clientX - boundingRect.left,\n                    event.clientY - boundingRect.top,\n                ),\n                performance.now(),\n            );\n        }\n\n        return () => {\n            //todo return disposer\n        };\n    };\n}\n","import { CanvasParticlesRenderer } from './particles/CanvasParticlesRenderer';\nimport { BoundingBox } from './BoundingBox';\nimport { Touch } from './Touch';\nimport { Transformation } from './Transformation';\nimport { MultiTouchController } from './MultiTouchController';\nimport { TouchController } from './TouchController';\nimport { multiTouchTransformations } from './multiTouchTransformations';\nimport { createMouseListener } from './listeners/createMouseListener';\nimport { createTouchListener } from './listeners/createTouchListener';\nimport {\n    svgTransformationDecode,\n    svgTransformationEncode,\n} from './tools/svgTools';\nimport { Vector2 } from './Vector2';\n\nexport {\n    TouchController,\n    MultiTouchController,\n    multiTouchTransformations,\n    Transformation,\n    Vector2,\n    Touch,\n    BoundingBox,\n    createMouseListener, //todo maybe wrap to object listeners\n    createTouchListener,\n    svgTransformationDecode,\n    svgTransformationEncode,\n    CanvasParticlesRenderer,\n};\n","import { Vector2 } from './../Vector2';\nimport { Scene } from './Scene';\nimport { Particle, IParticleOptions } from './Particle';\nexport class CanvasParticlesRenderer {\n    private liveCtx: CanvasRenderingContext2D;\n    private deadCtx: CanvasRenderingContext2D;\n    public deadParticlesCount = 0;\n    private scene: Scene;\n\n    //todo initial do better\n    constructor(quality: Vector2,initialColor:string='#ffffff') {\n        {\n            const canvas = document.createElement('canvas');\n            canvas.width = quality.x;\n            canvas.height = quality.y;\n            this.liveCtx = canvas.getContext('2d')!;\n        }\n        {\n            const canvas = document.createElement('canvas');\n            canvas.width = quality.x;\n            canvas.height = quality.y;\n            this.deadCtx = canvas.getContext('2d')!;\n            this.deadCtx.fillStyle = initialColor;\n            this.deadCtx.fillRect(\n                0,\n                0,\n                this.deadCtx.canvas.width,\n                this.deadCtx.canvas.height,\n            );\n        }\n\n        this.scene = new Scene(this.liveCtx);\n\n        //todo maybe with run?\n        requestAnimationFrame((now) => this.render(now));\n    }\n\n    private _contexts: CanvasRenderingContext2D[] = [];\n    addContext(context: CanvasRenderingContext2D) {\n        this._contexts.push(context);\n    }\n\n    private _subscribers: (() => void)[] = [];\n    subscribe(callback: () => void) {\n        this._subscribers.push(callback);\n    }\n    private callSubscribers() {\n        for (const subscriber of this._subscribers) {\n            subscriber();\n        }\n    }\n\n    drawPoint(options: IParticleOptions) {\n        const particle = new Particle(options, 1); //todo particle zIndex\n        this.scene.addObject(particle);\n    }\n\n    drawLine(options:IParticleOptions , position2: Vector2, segmentSize: number){\n\n        const position1 = options.current.position;\n        const segments = Math.ceil(position1.length(position2)/segmentSize);\n        \n        const positionAdd = position2.subtract(position1).scaleInPlace(1/segments);\n        const positionCurrent = position1.clone();\n\n        for(let i =0;i<segments;i++){\n            const particleOptions = JSON.parse(JSON.stringify(options));//todo better\n            particleOptions.current.position = positionCurrent;\n            this.drawPoint(particleOptions);\n            positionCurrent.addInPlace(positionAdd);\n        }\n    }\n\n    get liveParticlesCount(): number {\n        return this.scene.particles.length;\n    }\n\n    private lastRenderNow: null | number = null;\n    private render(now: number) {\n        //this.liveCtx.fillRect(0, 0, this.liveCtx.canvas.width, this.liveCtx.canvas.height);\n\n        if (this.lastRenderNow) {\n            const deadParticles = this.scene.update(\n                (now - this.lastRenderNow) / 1000,\n            );\n            this.deadParticlesCount += deadParticles.length;\n            for (const object of deadParticles.sort(Particle.compare)) {\n                object.render(this.deadCtx);\n            }\n        }\n        this.lastRenderNow = now;\n\n        this.liveCtx.drawImage(this.deadCtx.canvas, 0, 0);\n        this.scene.render();\n\n        for (const ctx of this._contexts) {\n            //ctx.fillRect(0, 0, this.liveCtx.canvas.width, this.liveCtx.canvas.height);\n            ctx.drawImage(\n                this.liveCtx.canvas,\n                0,\n                0,\n                this.liveCtx.canvas.width,\n                this.liveCtx.canvas.height,\n                0,\n                0,\n                ctx.canvas.width,\n                ctx.canvas.height,\n            );\n        }\n\n        this.callSubscribers();\n        requestAnimationFrame((now) => this.render(now));\n    }\n}\n","import { Vector2 } from './../Vector2';\nimport { Particle } from './Particle';\n\nexport class Scene {\n    //private ctx: CanvasRenderingContext2D;\n    public particles: Particle[];\n\n    constructor(private ctx: CanvasRenderingContext2D) {\n        //const { width, height } = sceneElement.getBoundingClientRect();\n        //sceneElement.width = width;\n        //sceneElement.height = height;\n        //this.ctx = sceneElement.getContext('2d')!;\n        this.particles = [];\n    }\n\n    addObject(object: Particle) {\n        this.particles.push(object);\n    }\n\n    render() {\n        //this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n        for (const particle of this.particles.sort(Particle.compare)) {\n            particle.render(this.ctx);\n        }\n    }\n\n    update(delta: number) {\n        for (const object of this.particles) {\n            //console.log(object.position,object.movement);\n            object.update(delta);\n        }\n\n        const live: Particle[] = [];\n        const dead: Particle[] = [];\n\n        for (const particle of this.particles) {\n            if (particle.live) {\n                live.push(particle);\n            } else {\n                dead.push(particle);\n            }\n        }\n\n        this.particles = live;\n        return dead;\n    }\n\n    get size() {\n        return new Vector2(this.ctx.canvas.width, this.ctx.canvas.height);\n    }\n}\n","//todo maybe with polyfill\nexport function sign(x: number): number {\n    if (x === 0) return 0;\n    if (x > 0) return 1;\n    if (x < 0) return -1;\n    return NaN;\n}\n","export function createImageFromSrc(src: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const image = window.document.createElement('IMG') as HTMLImageElement;\n        image.addEventListener('load', () => resolve(image));\n        image.src = src;\n    });\n}\n\nexport async function createCanvasFromSrc(\n    src: string,\n): Promise<HTMLCanvasElement> {\n    const image = await createImageFromSrc(src);\n    const canvas = window.document.createElement('CANVAS') as HTMLCanvasElement;\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const ctx = canvas.getContext('2d')!; //todo is this canvas usable?\n    ctx.drawImage(image, 0, 0);\n    return canvas;\n}\n\nexport async function createColoredCanvasFromSrc(\n    src: string,\n    color: string,\n): Promise<HTMLCanvasElement> {\n    const canvas = await createCanvasFromSrc(src);\n    const ctx = canvas.getContext('2d')!; //todo is this canvas usable?\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n    const data = imageData.data;\n\n    // convert image to grayscale\n    var rgbColor = hexToRgb(color);\n\n    for (var p = 0, len = data.length; p < len; p += 4) {\n        if (data[p + 3] == 0) continue;\n        data[p + 0] = rgbColor.r;\n        data[p + 1] = rgbColor.g;\n        data[p + 2] = rgbColor.b;\n        data[p + 3] = 255;\n    }\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n}\n\n//todo to separate file\nfunction hexToRgb(color: string) {\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    color = color.replace(shorthandRegex, function(m, r, g, b) {\n        return r + r + g + g + b + b;\n    });\n\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n    return result\n        ? {\n              r: parseInt(result[1], 16),\n              g: parseInt(result[2], 16),\n              b: parseInt(result[3], 16),\n          }\n        : {\n              r: 0,\n              g: 0,\n              b: 0,\n          };\n}\n","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map","\"use strict\";\nvar noop_1 = require('./noop');\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nvar share_1 = require('../operators/share');\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return share_1.share()(this);\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map","\"use strict\";\nvar multicast_1 = require('./multicast');\nvar refCount_1 = require('./refCount');\nvar Subject_1 = require('../Subject');\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map","\"use strict\";\nvar ConnectableObservable_1 = require('../observable/ConnectableObservable');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexports.multicast = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexports.MulticastOperator = MulticastOperator;\n//# sourceMappingURL=multicast.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Observable_1 = require('../Observable');\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar refCount_1 = require('../operators/refCount');\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nexports.connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar range_1 = require('../../observable/range');\nObservable_1.Observable.range = range_1.range;\n//# sourceMappingURL=range.js.map","\"use strict\";\nvar RangeObservable_1 = require('./RangeObservable');\nexports.range = RangeObservable_1.RangeObservable.create;\n//# sourceMappingURL=range.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map","import { TouchFrame } from './TouchFrame';\nimport { MultiTouch } from './MultiTouch';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { Observer } from 'rxjs/Observer';\nimport { TouchController } from './TouchController';\n\nexport class MultiTouchController<TElement> {\n    public ongoingMultiTouches: MultiTouch<TElement | undefined>[] = []; //todo null vs. undefined\n    public multiTouches: Observable<MultiTouch<TElement | undefined>>;\n    private _multiTouchesObserver: Observer<MultiTouch<TElement | undefined>>;\n\n    constructor(\n        public touchController: TouchController,\n        private _elementBinder: (frame: TouchFrame) => TElement | undefined, //todo maybe rename private properties - remove _\n    ) {\n        this.multiTouches = Observable.create(\n            (observer: Observer<MultiTouch<TElement | undefined>>) => {\n                this._multiTouchesObserver = observer;\n            },\n        ).share();\n\n        this.touchController.touches.subscribe((touch) => {\n            const element = this._elementBinder(touch.firstFrame);\n\n            //todo why can not be used find\n            let multiTouch = this.ongoingMultiTouches.filter(\n                (multiTouch) => multiTouch.element === element,\n            )[0];\n\n            if (typeof multiTouch === 'undefined') {\n                multiTouch = new MultiTouch(element, touch);\n                this.ongoingMultiTouches.push(multiTouch);\n                this._multiTouchesObserver.next(multiTouch);\n\n                multiTouch.touches.subscribe(\n                    () => {},\n                    () => {},\n                    () => {\n                        this.ongoingMultiTouches = this.ongoingMultiTouches.filter(\n                            (multiTouch2) => multiTouch2 !== multiTouch,\n                        );\n                    },\n                );\n            } else {\n                multiTouch.addTouch(touch);\n            }\n        });\n    }\n\n    get hoveredElements(): Observable<TElement | undefined> {\n        return Observable.create((observer: Observer<TElement | undefined>) => {\n            this.touchController.hoveredFrames.subscribe((frame) => {\n                observer.next(this._elementBinder(frame));\n            });\n        });\n    }\n\n    get hoveredElementsChanges(): Observable<\n        [TElement | undefined, TElement | undefined]\n    > {\n        return Observable.create(\n            (\n                observer: Observer<\n                    [TElement | undefined, TElement | undefined]\n                >,\n            ) => {\n                let lastElement: TElement | undefined;\n                this.hoveredElements.subscribe((thisElement) => {\n                    if (lastElement !== thisElement) {\n                        observer.next([thisElement, lastElement]);\n                        lastElement = thisElement;\n                    }\n                });\n            },\n        );\n    }\n\n    //todo method for dispose\n}\n","import { Transformation } from './Transformation';\nimport { BoundingBox } from './BoundingBox';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/finally';\nimport 'rxjs/add/operator/share';\nimport { Observer } from 'rxjs/Observer';\nimport { multiTouchTransformations } from './multiTouchTransformations';\nimport { Touch } from './Touch';\n\n//todo multitouch should be extended from this\nexport class MultiTouch<TElement> {\n    public empty: boolean = true;\n    public ongoingTouches: Touch[] = [];\n    public touches: Observable<Touch>;\n    private _touchesObserver: Observer<Touch>;\n\n    constructor(\n        public element: TElement, //todo this should be external\n        public firstTouch: Touch,\n    ) {\n        this.touches = Observable.create((observer: Observer<Touch>) => {\n            this._touchesObserver = observer;\n            setImmediate(() => this.addTouch(firstTouch));\n        }).share();\n    }\n\n    addTouch(touch: Touch) {\n        this.ongoingTouches.push(touch);\n        this._touchesObserver.next(touch);\n\n        touch.frames.subscribe(\n            (frame) => {\n                if (\n                    touch.firstFrame.position.length(frame.position) >=\n                    5 /*todo to config*/\n                ) {\n                    this.empty = false;\n                }\n            },\n            () => {\n                //todo is empty functions needed - if yes create empty function in tools\n            },\n            () => {\n                this.ongoingTouches = this.ongoingTouches.filter(\n                    (touch2) => touch2 !== touch,\n                );\n                if (this.ongoingTouches.length === 0) {\n                    this._touchesObserver.complete();\n                }\n            },\n        );\n    }\n\n    get ongoingTouchesChanges(): Observable<Touch[]> {\n        return Observable.create((observer: Observer<Touch[]>) => {\n            this.touches.subscribe(\n                (touch) => {\n                    observer.next(this.ongoingTouches);\n                    touch.frames.subscribe(\n                        (touch) => {},\n                        () => {},\n                        () => {\n                            setImmediate(() =>\n                                observer.next(this.ongoingTouches),\n                            );\n                        },\n                    );\n                },\n                () => {},\n                () => {\n                    observer.complete();\n                },\n            );\n        });\n    }\n\n    get ongoingPositionsChanges(): Observable<Touch[]> {\n        return Observable.create((observer: Observer<Touch[]>) => {\n            let subscriptions: Subscription[] = [];\n            this.ongoingTouchesChanges.subscribe(\n                (touches: Touch[]) => {\n                    for (const subscription of subscriptions) {\n                        subscription.unsubscribe();\n                    }\n\n                    subscriptions = touches.map((touch) =>\n                        touch.frames.subscribe(() => {\n                            observer.next(touches);\n                        }),\n                    );\n                },\n                () => {},\n                () => {\n                    observer.complete();\n                },\n            );\n        });\n    }\n\n    transformations(\n        boundingBox: BoundingBox = BoundingBox.One(),\n    ): Observable<Transformation> {\n        return multiTouchTransformations(this, boundingBox);\n    }\n\n    toString() {\n        return `MultiTouch`;\n    }\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar finally_1 = require('../../operator/finally');\nObservable_1.Observable.prototype.finally = finally_1._finally;\nObservable_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map","\"use strict\";\nvar finalize_1 = require('../operators/finalize');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return finalize_1.finalize(callback)(this);\n}\nexports._finally = _finally;\n//# sourceMappingURL=finally.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nexports.finalize = finalize;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(callback));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finalize.js.map","import { IListener } from './listeners/IListener';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { Observer } from 'rxjs/Observer';\nimport { TouchFrame } from './TouchFrame';\nimport { createMouseListener } from './listeners/createMouseListener';\nimport { createTouchListener } from './listeners/createTouchListener';\nimport { Touch } from './Touch';\n\n//todo multitouch should be extended from this\nexport class TouchController {\n    public touches: Observable<Touch>;\n    public hoveredFrames: Observable<TouchFrame>;\n    private _touchesObserver: Observer<Touch>;\n    private _hoveredFramesObserver: Observer<TouchFrame>;\n\n    static fromCanvas(canvas: HTMLCanvasElement) {\n        return new TouchController([canvas], canvas, true);\n    }\n\n    constructor(\n        public elements: HTMLElement[], //todo syntax sugar if set only one element\n        public anchorElement: HTMLElement,\n        setListeners = true,\n    ) {\n        //todo HTMLElement vs Element\n        this.touches = Observable.create((observer: Observer<Touch>) => {\n            this._touchesObserver = observer;\n        }).share();\n\n        this.hoveredFrames = Observable.create(\n            (observer: Observer<TouchFrame>) => {\n                this._hoveredFramesObserver = observer;\n            },\n        ).share();\n\n        if (setListeners) {\n            this.addListener(createMouseListener());\n            this.addListener(createMouseListener([1, 2], true));\n            this.addListener(createTouchListener());\n        }\n    }\n\n    private listeners: IListener[] = [];\n\n    addListener(listener: IListener) {\n        this.listeners.push(listener);\n        for (const element of this.elements) {\n            this.callListenerOnElement(listener, element);\n        }\n    }\n\n    addElement(element: HTMLElement) {\n        this.elements.push(element);\n        for (const listener of this.listeners) {\n            this.callListenerOnElement(listener, element);\n        }\n    }\n\n    callListenerOnElement(listener: IListener, element: HTMLElement) {\n        listener(\n            element,\n            this.anchorElement,\n            (touch: Touch) => this._touchesObserver.next(touch),\n            (frame: TouchFrame) => {\n                if (typeof this._hoveredFramesObserver !== 'undefined') {\n                    this._hoveredFramesObserver.next(frame);\n                }\n            },\n        );\n        //todo array of listeners disposers\n    }\n\n    emulateTouch(touch: Touch) {\n        setImmediate(() => {\n            this._touchesObserver.next(touch);\n        });\n    }\n\n    //todo method for dispose\n}\n"],"sourceRoot":""}
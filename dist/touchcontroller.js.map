{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Vector2.ts","webpack:///./node_modules/rxjs/Observable.js","webpack:///./node_modules/rxjs/Subscriber.js","webpack:///./node_modules/rxjs/Subscription.js","webpack:///./node_modules/rxjs/add/operator/share.js","webpack:///./src/Transformation.ts","webpack:///./node_modules/timers-browserify/main.js","webpack:///./src/BoundingBox.ts","webpack:///./src/Touch.ts","webpack:///./node_modules/rxjs/util/root.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/rxjs/symbol/rxSubscriber.js","webpack:///./src/TouchFrame.ts","webpack:///./src/drawController/Particle.ts","webpack:///./src/tools/svgTools.ts","webpack:///./node_modules/rxjs/util/isFunction.js","webpack:///./node_modules/rxjs/util/errorObject.js","webpack:///./node_modules/rxjs/Observer.js","webpack:///./node_modules/rxjs/Subject.js","webpack:///./node_modules/rxjs/operators/refCount.js","webpack:///./src/multiTouchTransformations.ts","webpack:///./src/listeners/createMouseListener.ts","webpack:///./src/listeners/createTouchListener.ts","webpack:///./src/index.ts","webpack:///./src/drawController/CanvasParticlesRenderer.ts","webpack:///./src/drawController/Scene.ts","webpack:///./src/tools/mathTools.ts","webpack:///./src/tools/imageTools.ts","webpack:///./src/tools/Cache.ts","webpack:///./src/tools/average.ts","webpack:///./node_modules/rxjs/util/toSubscriber.js","webpack:///./node_modules/rxjs/util/isArray.js","webpack:///./node_modules/rxjs/util/isObject.js","webpack:///./node_modules/rxjs/util/tryCatch.js","webpack:///./node_modules/rxjs/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/symbol/observable.js","webpack:///./node_modules/rxjs/util/pipe.js","webpack:///./node_modules/rxjs/util/noop.js","webpack:///./node_modules/rxjs/operator/share.js","webpack:///./node_modules/rxjs/operators/share.js","webpack:///./node_modules/rxjs/operators/multicast.js","webpack:///./node_modules/rxjs/observable/ConnectableObservable.js","webpack:///./node_modules/rxjs/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/SubjectSubscription.js","webpack:///./node_modules/rxjs/add/observable/range.js","webpack:///./node_modules/rxjs/observable/range.js","webpack:///./node_modules/rxjs/observable/RangeObservable.js","webpack:///./src/MultiTouchController.ts","webpack:///./src/MultiTouch.ts","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/rxjs/add/operator/finally.js","webpack:///./node_modules/rxjs/operator/finally.js","webpack:///./node_modules/rxjs/operators/finalize.js","webpack:///./src/TouchController.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vector2","x","y","this","isNaN","Error","Zero","One","clone","add","vectors","_i","arguments","length","reduce","vector2","addInPlace","_a","vectors_1","vector","subtract","subtractInPlace","scale","scaleInPlace","Math","sqrt","pow","rotation","atan2","rotate","radians","base","cos","sin","toArray","toString","fromTopLeft","boundingBox","left","top","root_1","toSubscriber_1","observable_1","pipe_1","Observable","subscribe","_isScalar","_subscribe","lift","operator","observable","source","observerOrNext","error","complete","sink","toSubscriber","_trySubscribe","syncErrorThrowable","syncErrorThrown","syncErrorValue","err","forEach","next","PromiseCtor","_this","root","Rx","config","Promise","resolve","reject","subscription","unsubscribe","subscriber","pipe","operations","pipeFromArray","toPromise","__extends","b","__","constructor","isFunction_1","Subscription_1","Observer_1","rxSubscriber_1","Subscriber","_super","destinationOrNext","isStopped","destination","empty","SafeSubscriber","rxSubscriber","_next","_error","_complete","closed","_unsubscribeAndRecycle","_parent","_parents","Subscription","_parentSubscriber","context","isFunction","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","fn","parent","_unsubscribe","isArray_1","isObject_1","tryCatch_1","errorObject_1","UnsubscriptionError_1","_subscriptions","errors","hasErrors","index","len","remove","tryCatch","errorObject","e","UnsubscriptionError","flattenUnsubscriptionErrors","isArray","sub","isObject","concat","push","teardown","EMPTY","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","errs","Observable_1","share_1","share","Vector2_1","svgTools_1","Transformation","translate","rotateCenter","Neutral","undefined","cloneDeep","transformation","PI","applyOnElement","element","tagName","applyOnSvgElement","applyOnHtmlElement","style","parseFloat","transformationStringBefore","getAttribute","transformationAfter","svgTransformationDecode","transformationStringAfter","svgTransformationEncode","setAttribute","global","scope","self","window","apply","Function","Timeout","id","clearFn","_id","_clearFn","setTimeout","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","Transformation_1","BoundingBox","center","size","fromMinMax","maxx","maxy","minx","miny","applyTransformation","intersects","position","position1r","position2r","grow","amount","isIn","outerBoard","topLeft","topRight","bottomLeft","bottomRight","countTransformation","destinationBoundingBox","redrawToElement","boundingBoxElement","display","zIndex","border","width","height","transform","TouchFrame_1","Touch","type","anchorElement","firstFrame","lastFrame","lastFrame2","frames","observer","_framesObserver","move","newFrame","end","time","Click","touch","TouchFrame","__window","__self","WorkerGlobalScope","_root","g","eval","for","$$rxSubscriber","positionRelative","rotating","force","radius","performance","now","offset","getBoundingClientRect","mathTools_1","imageTools_1","Particle","options","shapeData","initializeSource","createColoredCanvasFromSrc","shapeSrc","color","_b","sent","current","widthSize","movement","update","delta","frictionPowered","friction","render","ctx","save","drawImage","shapeCenter","restore","compare","a","sign","TRANSFORM","TRANSLATE","ROTATE","SCALE","lastIndex","transforms","execPart","exec","map","part","test","angleDegrees","console","warn","Subscriber_1","ObjectUnsubscribedError_1","SubjectSubscription_1","SubjectSubscriber","Subject","observers","hasError","thrownError","subject","AnonymousSubject","ObjectUnsubscribedError","copy","slice","SubjectSubscription","asObservable","refCount","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","BoundingBox_1","multiTouchTransformations","multiTouch","ongoingTouchesChanges","touches","subscriptions_1","countTouchesTransformation","lastTouchesTransformation","touch1","touchMoveCallback","currentTouchesTransformation","deltaTransformation","Touch_1","MOUSE_LISTENER_OPTIONS","capture","passive","onlyTouch","createMouseListener","buttons","listener","newTouch","newHoverFrame","immediateDrag","addEventListener","event","button","preventDefault","stopPropagation","_handleStart","_createTouchFrameFromEvent","_handleMouseDownOnElement","currentTouch","_handleMouseMoveOnElement","firstTouchFrame","document","_handleMouseMoveOnDocument","mouseUpListenerOnDocument","removeEventListener","boundingRect","clientX","clientY","title","join","acceptsEvent","MouseEvent","TOUCH_LISTENER_OPTIONS","createTouchListener","changedTouches","currentTouches","identifier","_handleTouchesStart","_handleTouchesMove","_handleTouchesEnd","currentTouch_1","handleTouchMoveOnDocument_1","Array","from","find","getTouchFromEvent_1","handleTouchUpOnDocument_1","TouchEvent","CanvasParticlesRenderer_1","DrawController","MultiTouchController_1","MultiTouchController","TouchController_1","TouchController","multiTouchTransformations_1","createMouseListener_1","createTouchListener_1","Scene_1","Particle_1","average_1","quality","initialColor","canvas","deadParticlesCount","_contexts","_subscribers","lastRenderNow","createElement","liveCtx","getContext","deadCtx","fillStyle","fillRect","scene","Scene","requestAnimationFrame","addContext","callback","callSubscribers","drawPoint","particle","addObject","drawLine","options1","options2","segmentSize","segmentsCount","ceil","weight1","particleOptionsAverage","weight","particles","deadParticles","sort","_c","live","dead","NaN","Cache_1","createImageFromSrc","src","image","canvasFromSrcCache","SourceCache","createCanvasFromSrc","hasItem","getItem","setItem","canvasColoredFromSrcCache","imageData","getImageData","data","rgbColor","replace","result","parseInt","hexToRgb","canvasColored","putImageData","storage","some","average","multiply","items","sum","count","items_1","particleOptionsExternalsAdd","particleOptionsExternalsMultiply","vector2Average","nextOrObserver","tryCatchTarget","tryCatcher","stack","message","getSymbolObservable","$$observable","noop_1","fns","input","prev","noop","multicast_1","refCount_1","Subject_1","shareSubjectFactory","multicast","ConnectableObservable_1","subjectOrSubjectFactory","selector","subjectFactory","MulticastOperator","connectableObservableDescriptor","ConnectableObservable","_isComplete","getSubject","_subject","ConnectableSubscriber","connectableProto","writable","subscriberIndex","range_1","range","RangeObservable_1","RangeObservable","start","scheduler","_count","dispatch","state","schedule","MultiTouch_1","touchController","_elementBinder","ongoingMultiTouches","multiTouches","_multiTouchesObserver","filter","MultiTouch","multiTouch2","addTouch","hoveredFrames","frame","lastElement","hoveredElements","thisElement","firstTouch","ongoingTouches","_touchesObserver","touch2","transformations","process","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","random","onGlobalMessage","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","args","task","run","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","array","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","finally_1","finally","_finally","finalize_1","finalize","FinallyOperator","FinallySubscriber","elements","setListeners","_hoveredFramesObserver","fromCanvas","callListenerOnElement","addElement","emulateTouch"],"mappings":"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","file":"touchcontroller.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","//todo to other my library - combine TC, Vire\nexport class Vector2 {\n    constructor(public x: number, public y: number) {\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error(\n                `Vector2(${x},${y}) can not be created due to NaN values.`,\n            );\n        }\n    }\n\n    static Zero() {\n        return new Vector2(0, 0);\n    }\n\n    static One() {\n        return new Vector2(1, 1);\n    }\n\n    clone(): Vector2 {\n        return new Vector2(this.x, this.y);\n    }\n\n    //todo consolidate 2 add methods and 1 static method\n    add(...vectors: Vector2[]): Vector2 {\n        return new Vector2(\n            vectors.reduce((x, vector2) => x + vector2.x, this.x),\n            vectors.reduce((y, vector2) => y + vector2.y, this.y),\n        );\n    }\n\n    addInPlace(...vectors: Vector2[]): this {\n        //todo void vs. never\n        for (const vector of vectors) {\n            this.x += vector.x;\n            this.y += vector.y;\n        }\n        return this;\n    }\n\n    static add(...vectors: Vector2[]) {\n        return new Vector2(\n            vectors.reduce((x, vector2) => x + vector2.x, 0),\n            vectors.reduce((y, vector2) => y + vector2.y, 0),\n        );\n    }\n\n    subtract(vector2: Vector2): Vector2 {\n        return new Vector2(this.x - vector2.x, this.y - vector2.y);\n    }\n\n    subtractInPlace(vector2: Vector2): this {\n        this.x -= vector2.x;\n        this.y -= vector2.y;\n        return this;\n    }\n\n    scale(scale: number): Vector2 {\n        return new Vector2(this.x * scale, this.y * scale);\n    }\n\n    scaleInPlace(scale: number): this {\n        this.x *= scale;\n        this.y *= scale;\n        return this;\n    }\n\n    length(vector2: Vector2 = Vector2.Zero()): number {\n        return Math.sqrt(\n            Math.pow(this.x - vector2.x, 2) + Math.pow(this.y - vector2.y, 2),\n        );\n    }\n\n    rotation(vector2: Vector2 = Vector2.Zero()): number {\n        return Math.atan2(this.y - vector2.y, this.x - vector2.x);\n    }\n\n    rotate(radians: number, vector2: Vector2 = Vector2.Zero()) {\n        const base = this.subtract(vector2);\n        const length = base.length();\n        const rotation = base.rotation();\n        return new Vector2(\n            Math.cos(rotation + radians) * length,\n            Math.sin(rotation + radians) * length,\n        ).add(vector2);\n    }\n\n    toArray(): [number, number] {\n        return [this.x, this.y];\n    }\n\n    toString(): string {\n        return `[${this.x}, ${this.y}]`;\n    }\n\n    static fromTopLeft(boundingBox: { top: number; left: number }) {\n        return new Vector2(boundingBox.left, boundingBox.top);\n    }\n}\n","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\nvar pipe_1 = require('./util/pipe');\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar share_1 = require('../../operator/share');\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map","import { Vector2 } from './Vector2';\nimport {\n    svgTransformationDecode,\n    svgTransformationEncode,\n} from './tools/svgTools';\n\nexport class Transformation {\n    constructor(\n        public translate: Vector2 = Vector2.Zero(),\n        public rotate: number = 0,\n        public rotateCenter: Vector2 = Vector2.Zero(),\n        public scale: number = 1,\n    ) {}\n\n    static Neutral(): Transformation {\n        return new Transformation();\n    }\n\n    static translate(translate: Vector2): Transformation {\n        return new Transformation(translate);\n    }\n\n    static rotate(rotate: number): Transformation {\n        return new Transformation(undefined, rotate);\n    }\n\n    static scale(scale: number): Transformation {\n        return new Transformation(undefined, undefined, undefined, scale);\n    }\n\n    clone(): Transformation {\n        return new Transformation(\n            this.translate,\n            this.rotate,\n            this.rotateCenter,\n            this.scale,\n        );\n    }\n\n    cloneDeep(): Transformation {\n        return new Transformation(\n            this.translate.clone(),\n            this.rotate,\n            this.rotateCenter.clone(),\n            this.scale,\n        );\n    }\n\n    //todo in place methods\n    add(transformation: Transformation): Transformation {\n        return new Transformation(\n            this.translate.add(transformation.translate),\n            (this.rotate + transformation.rotate) % (Math.PI * 2),\n            this.rotateCenter.add(transformation.rotateCenter), //todo is it correct\n            this.scale * transformation.scale,\n        );\n    }\n\n    subtract(transformation: Transformation): Transformation {\n        return new Transformation(\n            this.translate.subtract(transformation.translate),\n            (this.rotate - transformation.rotate + Math.PI * 2) % (Math.PI * 2),\n            this.rotateCenter.subtract(transformation.rotateCenter), //todo is it correct\n            this.scale / transformation.scale,\n        );\n    }\n\n    //todo maybe move to other function\n    applyOnElement(element: Element) {\n        switch (element.tagName) {\n            case 'g':\n                this.applyOnSvgElement(element as SVGGElement);\n                break;\n            default:\n                this.applyOnHtmlElement(element as HTMLElement);\n        }\n    }\n\n    applyOnHtmlElement(element: HTMLElement) {\n        element.style.left =\n            parseFloat(element.style.left || '0px') + this.translate.x + 'px'; //todo bounding box as default\n        element.style.top =\n            parseFloat(element.style.top || '0px') + this.translate.y + 'px';\n    }\n\n    applyOnSvgElement(element: SVGGElement) {\n        /*element.setAttribute(\n            'transform',\n            vectorToTranslate(\n                translateToVector(\n                    element.getAttribute('transform') || undefined,\n                ).add(this.translate),\n            ),\n        );\n        console.groupCollapsed('applyOnSvgElement');\n        console.log('this',this);\n        console.log('element',element);*/\n\n        const transformationStringBefore =\n            element.getAttribute('transform') || '';\n        const transformationBefore = svgTransformationDecode(\n            transformationStringBefore,\n        );\n\n        const transformationAfter = transformationBefore.add(this);\n        const transformationStringAfter = svgTransformationEncode(\n            transformationAfter,\n        );\n\n        element.setAttribute('transform', transformationStringAfter);\n\n        /*\n        console.log('transformationBefore',transformationBefore);\n        console.log('transformationAfter',transformationAfter);\n\n        console.log('transformationStringBefore',transformationStringBefore);\n        console.log('transformationStringAfter',transformationStringAfter);\n\n        console.log('check',element.getAttribute('transform'));\n\n\n        console.groupEnd();\n        */\n    }\n}\n\n/*setImmediate(() => {\n    const element = document.getElementsByTagName('g')[0];\n    const transformation = Transformation.rotate(0.2);\n\n    console.log('element', element);\n    console.log('transformation', transformation);\n\n    const interval = setInterval(() => {\n        transformation.applyOnSvgElement(element);\n    }, 100);\n\n    setTimeout(() => {\n        clearInterval(interval);\n    }, 1000);\n});\n*/\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","import { Vector2 } from './Vector2';\nimport { Transformation } from './Transformation';\n//todo to other my library - combine TC, Vire\n\nexport class BoundingBox {\n    constructor(\n        public center: Vector2 = Vector2.Zero(),\n        public size: Vector2 = Vector2.One(),\n        public rotation: number = 0,\n    ) {}\n\n    static One() {\n        return new BoundingBox();\n    }\n\n    static fromMinMax(\n        maxx: number,\n        maxy: number,\n        minx: number,\n        miny: number,\n        rotation: number,\n    ) {\n        return new BoundingBox(\n            new Vector2((maxx + minx) / 2, (maxy + miny) / 2),\n            new Vector2(maxx - minx, maxy - miny),\n            rotation,\n        );\n    }\n\n    clone() {\n        return new BoundingBox(this.center, this.size, this.rotation);\n    }\n\n    cloneDeep() {\n        return new BoundingBox(\n            this.center.clone(),\n            this.size.clone(),\n            this.rotation,\n        );\n    }\n\n    applyTransformation(transformation: Transformation) {\n        this.center.addInPlace(transformation.translate);\n        this.size.scaleInPlace(transformation.scale);\n        this.rotation += transformation.rotate;\n    }\n\n    intersects(position: Vector2): boolean {\n        const position1r = this.center;\n        const position2r = position.rotate(-this.rotation, this.center);\n\n        return (\n            position1r.x - this.size.x / 2 <= position2r.x &&\n            position1r.y - this.size.y / 2 <= position2r.y &&\n            position1r.x + this.size.x / 2 >= position2r.x &&\n            position1r.y + this.size.y / 2 >= position2r.y\n        );\n    }\n\n    grow(amount: number) {\n        return new BoundingBox(\n            this.center,\n            new Vector2(this.size.x + amount * 2, this.size.y + amount * 2),\n            this.rotation,\n        );\n    }\n\n    rotate(radians = 0, position = this.center) {\n        this.center = this.center.rotate(radians, position); //todo maybe in place\n        this.rotation += radians;\n    }\n\n    isIn(outerBoard: BoundingBox) {\n        return (\n            outerBoard.intersects(this.topLeft) &&\n            outerBoard.intersects(this.topRight) &&\n            outerBoard.intersects(this.bottomLeft) &&\n            outerBoard.intersects(this.bottomRight)\n        );\n    }\n\n    get topLeft() {\n        return this.center\n            .add(new Vector2(this.size.x * -0.5, this.size.y * -0.5))\n            .rotate(this.rotation, this.center);\n    }\n\n    get topRight() {\n        return this.center\n            .add(new Vector2(this.size.x * 0.5, this.size.y * -0.5))\n            .rotate(this.rotation, this.center);\n    }\n\n    get bottomLeft() {\n        return this.center\n            .add(new Vector2(this.size.x * -0.5, this.size.y * 0.5))\n            .rotate(this.rotation, this.center);\n    }\n\n    get bottomRight() {\n        return this.center\n            .add(new Vector2(this.size.x * 0.5, this.size.y * 0.5))\n            .rotate(this.rotation, this.center);\n    }\n\n    set topLeft(value: Vector2) {\n        this.center = this.center.add(value.subtract(this.topLeft));\n    }\n\n    countTransformation(destinationBoundingBox: BoundingBox) {\n        return new Transformation(\n            destinationBoundingBox.center.subtract(this.center),\n            destinationBoundingBox.rotation - this.rotation,\n            undefined,\n            destinationBoundingBox.size.x / destinationBoundingBox.size.x, //todo better\n        );\n    }\n\n    redrawToElement(boundingBoxElement: HTMLDivElement) {\n        boundingBoxElement.style.display = 'block';\n        boundingBoxElement.style.position = 'fixed';\n        boundingBoxElement.style.zIndex = '9999';\n        boundingBoxElement.style.border = '2px solid red';\n        boundingBoxElement.style.left = this.center.x + 'px';\n        boundingBoxElement.style.top = this.center.y + 'px';\n        boundingBoxElement.style.width = this.size.x + 'px';\n        boundingBoxElement.style.height = this.size.y + 'px';\n        boundingBoxElement.style.transform = `translate(-50%, -50%) rotate(${(this\n            .rotation /\n            Math.PI) *\n            180}deg)`;\n    }\n\n    /*\n    todo\n    collide(boundingBox2: BoundingBox):boolean{\n    }*/\n}\n","import { Vector2 } from './Vector2';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { Observer } from 'rxjs/Observer';\nimport 'rxjs/add/observable/range';\nimport 'rxjs/add/operator/share';\nimport { TouchFrame } from './TouchFrame';\n\nexport class Touch {\n    public frames: Observable<TouchFrame>;\n    private _framesObserver: Observer<TouchFrame>;\n    public lastFrame: TouchFrame;\n    public lastFrame2: TouchFrame; //todo maybe function with offest\n\n    constructor(\n        public type: 'TOUCH' | 'MOUSE', //todo second optional param\n        public anchorElement: HTMLElement,\n        public firstFrame: TouchFrame,\n    ) {\n        this.lastFrame = firstFrame;\n        this.lastFrame2 = firstFrame;\n        this.frames = Observable.create((observer: Observer<TouchFrame>) => {\n            observer.next(firstFrame); //todo maybe setImmediate(()=>\n            this._framesObserver = observer;\n        }).share(); //todo share vs publish\n    }\n\n    move(newFrame: TouchFrame, end = false) {\n        if (typeof this._framesObserver === 'undefined') {\n            return; //todo better;\n        }\n        this.lastFrame2 = this.lastFrame;\n        this.lastFrame = newFrame;\n        this._framesObserver.next(newFrame);\n        if (end) {\n            this.end();\n        }\n    }\n\n    end() {\n        this._framesObserver.complete();\n    }\n\n    get start() {\n        return this.firstFrame.time;\n    }\n\n    toString() {\n        return `Touch`;\n    }\n\n    static Click(\n        element: HTMLElement,\n        anchorElement: HTMLElement,\n        position: Vector2,\n    ): Touch {\n        const touch = new Touch(\n            'MOUSE',\n            anchorElement,\n            new TouchFrame(element, anchorElement, position),\n        );\n        setTimeout(() => {\n            touch.end();\n        }, 100);\n        return touch;\n    }\n\n    /*\n    todo maybe\n    static Rotate(position: Vector2, rotation:number): Touch {\n        const touch = new Touch('MOUSE', new TouchFrame(position));\n        setTimeout(() => {\n            touch.move(new TouchFrame(position,undefined,rotation),true);\n        }, 100);\n        return touch;\n    }\n\n    /*todo\n    static Drag(position1: Vector2, position2: Vector2, duration: number): Touch {\n        const touch = new Touch('MOUSE', new TouchFrame(position1));\n\n        const startTime = performance.now();\n\n        function animationFrame(now: number) {\n\n            const progress = Math.max((now - startTime) / duration, 1);\n\n            const position = Vector2.add(position1.scale(1 - progress), position2.scale(progress));\n            touch.move(new TouchFrame(position));\n\n            console.log(progress,position);\n\n            //if (progress < 1) {\n                requestAnimationFrame(animationFrame);\n            //}else{\n            touch.end();\n            }\n        }\n\n        requestAnimationFrame(animationFrame);\n        return touch;\n    }\n    */\n}\n","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","import { Vector2 } from './Vector2';\n\nexport class TouchFrame {\n    public position: Vector2;\n\n    constructor(\n        public element: HTMLElement | SVGElement,\n        public anchorElement: HTMLElement,\n        public positionRelative: Vector2 = Vector2.Zero(),\n        public time: number = performance.now(),\n        public rotating: boolean = false,\n        public force: number = 0,\n        public radius: Vector2 = Vector2.Zero(),\n    ) {\n        const offset = Vector2.fromTopLeft(\n            element.getBoundingClientRect(),\n        ).subtractInPlace(\n            Vector2.fromTopLeft(anchorElement.getBoundingClientRect()),\n        );\n        this.position = this.positionRelative.add(offset);\n    }\n\n    clone(): TouchFrame {\n        return new TouchFrame(\n            this.element,\n            this.anchorElement,\n            this.positionRelative,\n            this.time,\n            this.rotating,\n            this.force,\n            this.radius,\n        );\n    }\n}\n","import { Vector2 } from './../Vector2';\nimport { sign } from '../tools/mathTools';\nimport { createColoredCanvasFromSrc } from '../tools/imageTools';\n\nexport interface IParticleOptions {\n    shapeSrc: string;\n    shapeCenter: Vector2;\n    color: string;\n    current: IParticleOptionsExternals;\n    movement: IParticleOptionsExternals;\n    friction: number;\n}\n\nexport interface IParticleOptionsExternals {\n    position: Vector2;\n    rotation: number;\n    widthSize: number;\n}\n\nexport class Particle {\n    private shapeData: null | HTMLImageElement | HTMLCanvasElement = null;\n\n    constructor(private options: IParticleOptions, public zIndex: number) {\n        this.initializeSource();\n    }\n\n    async initializeSource() {\n        this.shapeData = await createColoredCanvasFromSrc(\n            this.options.shapeSrc,\n            this.options.color,\n        ); //todo optimize image loads\n    }\n\n    get size() {\n        if (!this.shapeData) {\n            //todo maybe only warn and return width,width\n            throw new Error(`Particle image is not yet loaded.`);\n        }\n\n        return new Vector2(\n            this.options.current.widthSize,\n            (this.options.current.widthSize / this.shapeData.width) *\n                this.shapeData.height,\n        );\n    }\n\n    get live(): boolean {\n        //todo tresshold in config\n        return (\n            this.options.movement.position.length() > 0.5 ||\n            this.options.movement.rotation > 0.5 ||\n            this.options.movement.widthSize > 0.5\n        );\n    }\n\n    update(delta: number) {\n        this.options.current.position.addInPlace(\n            this.options.movement.position.scale(delta),\n        );\n        this.options.current.rotation += this.options.movement.rotation * delta;\n        this.options.current.widthSize +=\n            this.options.movement.widthSize * delta;\n\n        const frictionPowered = Math.pow(this.options.friction, delta);\n        this.options.movement.position.scaleInPlace(frictionPowered);\n        this.options.movement.rotation *= frictionPowered;\n        this.options.movement.widthSize *= frictionPowered; //todo maybe as area\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        if (!this.shapeData) {\n            //todo maybe console.warn(`Particle image is not yet loaded.`);\n            return;\n        }\n\n        ctx.save();\n        ctx.translate(\n            this.options.current.position.x,\n            this.options.current.position.y,\n        );\n        ctx.rotate(this.options.current.rotation + Math.PI / 2);\n        //ctx.globalAlpha = this.lifetime === -1 ? 1 : Math.sqrt(this.lifetime / 10);\n        ctx.drawImage(\n            this.shapeData,\n            0,\n            0,\n            this.shapeData.width,\n            this.shapeData.height,\n            -this.size.x * this.options.shapeCenter.x,\n            -this.size.y * this.options.shapeCenter.y,\n            this.size.x,\n            this.size.y,\n        );\n        ctx.restore();\n    }\n\n    static compare(a: Particle, b: Particle) {\n        return sign(a.zIndex - b.zIndex);\n    }\n}\n","import { Transformation } from '../Transformation';\nimport { Vector2 } from '../Vector2';\n\nconst TRANSFORM = /\\w*\\([^)]*\\)/g;\nconst TRANSLATE = /^translate\\(\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*,?\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*\\)$/g;\nconst ROTATE = /^rotate\\(\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*,?\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*,?\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*\\)$/g;\nconst SCALE = /^scale\\(\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*,?\\s*(\\-?\\d*\\.?\\d+(e\\-?\\d*\\.?\\d+)?)\\s*\\)$/g;\n\n//todo is (\\-?\\d*\\.?\\d+) correct for number?\n//todo rotate(1.00342672343173e-7,0,0)\n\n//console.log(TRANSLATE.exec('translate(4,84)'));\n//console.log(TRANSLATE.exec('translate(4,84)'));\n\nexport function svgTransformationDecode(\n    transform: string = '',\n): Transformation {\n    let transformation = Transformation.Neutral();\n\n    TRANSFORM.lastIndex = 0;\n    const transforms: string[] = [];\n    let execPart: RegExpExecArray | null = null;\n    while ((execPart = TRANSFORM.exec(transform))) {\n        transforms.push(execPart[0]);\n    }\n\n    if (!transforms) {\n        console.warn(`Can not decode svg transform \"${transform}\".`);\n        return Transformation.Neutral();\n    }\n\n    //console.log('transform => transforms',transform,transforms);\n\n    transforms.map((part) => {\n        TRANSLATE.lastIndex = 0;\n        ROTATE.lastIndex = 0;\n\n        if (TRANSLATE.test(part)) {\n            //console.log(part, TRANSLATE);\n            //console.log(part.match(TRANSLATE));\n            //onsole.log(TRANSLATE.exec(part));\n\n            TRANSLATE.lastIndex = 0;\n            const [full, x, xe, y, ye] = TRANSLATE.exec(part)!.map((n) =>\n                parseFloat(n),\n            );\n            full;\n            xe;\n            ye;\n\n            transformation.translate = new Vector2(x, y);\n        } else if (ROTATE.test(part)) {\n            //console.log(ROTATE.exec(part));\n\n            ROTATE.lastIndex = 0;\n            const [full, angleDegrees, ade, x, xe, y, ye] = ROTATE.exec(\n                part,\n            )!.map((n) => parseFloat(n));\n            full;\n            ade;\n            xe;\n            ye;\n\n            //console.log(full, angleDegrees, ade, x, xe, y, ye);\n\n            transformation.rotate = (angleDegrees / 180) * Math.PI;\n            transformation.rotateCenter = new Vector2(x, y);\n        } else if (SCALE.test(part)) {\n            /* todo\n            SCALE.lastIndex = 0;\n            console.log(SCALE.exec(part)!);\n\n            SCALE.lastIndex = 0;\n            const [full, x, xe, y, ye] = SCALE.exec(part)!.map((n) =>\n                parseFloat(n),\n            );\n            full;\n            xe;\n            y;\n            ye;\n\n            //console.log([full, x, xe, y, ye]);\n\n            transformation.scale = x;//todo y is not saved\n            */\n        } else {\n            console.warn(\n                `Unknown part of svg transform \"${part}\".`,\n                TRANSLATE.test(part),\n                ROTATE.test(part),\n            );\n        }\n    });\n\n    return transformation;\n}\n\nexport function svgTransformationEncode(\n    transformation: Transformation,\n): string {\n    const { translate, rotate, rotateCenter /*, scale*/ } = transformation;\n    return `translate(${translate.x} ${translate.y}) rotate(${(rotate /\n        Math.PI) *\n        180} ${rotateCenter.x} ${rotateCenter.y})`; //todo is it better with spaces or colons?\n    //todo scale(${scale} ${scale})\n}\n","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nexports.refCount = refCount;\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=refCount.js.map","import { MultiTouch } from './MultiTouch';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { BoundingBox } from './BoundingBox';\nimport { Transformation } from './Transformation';\nimport { Touch } from './Touch';\nimport { Vector2 } from './Vector2';\n\nexport function multiTouchTransformations<TElement>(\n    multiTouch: MultiTouch<TElement>,\n    boundingBox: BoundingBox = BoundingBox.One(),\n): Observable<Transformation> {\n    return Observable.create((observer: Observer<Transformation>) => {\n        let subscriptions: Subscription[] = [];\n\n        multiTouch.ongoingTouchesChanges.subscribe(\n            (touches) => {\n                for (const subscription of subscriptions) {\n                    subscription.unsubscribe();\n                }\n                //todo maybe subscription = [];\n\n                let countTouchesTransformation: (\n                    ...touches: Touch[]\n                ) => Transformation;\n                if (touches.length === 1) {\n                    if (!touches[0].lastFrame.rotating) {\n                        countTouchesTransformation = (touch1) =>\n                            new Transformation(\n                                touch1.lastFrame.position,\n                                0,\n                                undefined,\n                                1,\n                            );\n                    } else {\n                        //todo this should be like second picked point is center of bounding box\n                        countTouchesTransformation = (touch1) =>\n                            new Transformation(\n                                undefined,\n                                boundingBox.center.rotation(\n                                    touch1.lastFrame.position,\n                                ),\n                                undefined,\n                                1,\n                            );\n                    }\n                } else {\n                    //todo how to figure out with 3, 4, 5,... finger on one object?\n                    countTouchesTransformation = (...touches) =>\n                        new Transformation(\n                            Vector2.Zero()\n                                .add(\n                                    ...touches.map(\n                                        (touch) => touch.lastFrame.position,\n                                    ),\n                                )\n                                .scale(1 / touches.length),\n                            touches[0].lastFrame.position.rotation(\n                                touches[1].lastFrame.position,\n                            ),\n                            undefined,\n                            touches[0].lastFrame.position.length(\n                                touches[1].lastFrame.position,\n                            ),\n                        );\n                }\n\n                let lastTouchesTransformation = countTouchesTransformation(\n                    ...touches,\n                );\n\n                const touchMoveCallback = () => {\n                    const currentTouchesTransformation = countTouchesTransformation(\n                        ...touches,\n                    );\n                    const deltaTransformation = currentTouchesTransformation.subtract(\n                        lastTouchesTransformation,\n                    );\n\n                    boundingBox.applyTransformation(deltaTransformation);\n                    observer.next(deltaTransformation);\n\n                    lastTouchesTransformation = currentTouchesTransformation;\n                };\n\n                subscriptions = touches.map((touch) =>\n                    touch.frames.subscribe(touchMoveCallback),\n                );\n            },\n            () => {},\n            () => {\n                observer.complete();\n            },\n        );\n    });\n}\n","import { IEvent } from './../interfaces/IEvent';\nimport { TouchFrame } from './../TouchFrame';\nimport { IListener } from '../interfaces/IListener';\nimport { Touch } from '../Touch';\nimport { Vector2 } from '../Vector2';\n\nconst MOUSE_LISTENER_OPTIONS = {\n    capture: true,\n    passive: false,\n};\n\n//todo singleton :(\nlet onlyTouch: Touch | null = null;\n\nexport function createMouseListener(\n    buttons: number[] = [0],\n    rotating = false,\n): IListener {\n    const listener: any = (\n        element: HTMLElement | SVGElement,\n        anchorElement: HTMLElement,\n        newTouch: (touch: Touch) => void,\n        newHoverFrame: (frame: TouchFrame) => void,\n        immediateDrag: null | IEvent,\n    ) => {\n        element.addEventListener(\n            'mousedown',\n            (event) => _handleMouseDownOnElement(event as any),\n            MOUSE_LISTENER_OPTIONS,\n        );\n\n        element.addEventListener(\n            'mousemove',\n            (event) => _handleMouseMoveOnElement(event as any),\n            MOUSE_LISTENER_OPTIONS,\n        );\n\n        //todo configurable mouse buttons\n        element.addEventListener(\n            'contextmenu',\n            (event) => {\n                event.preventDefault();\n                event.stopPropagation();\n            },\n            false,\n        );\n\n        let currentTouch: Touch | null = null;\n\n        if (immediateDrag) {\n            setImmediate(() => {\n                _handleStart(_createTouchFrameFromEvent(immediateDrag));\n            });\n        }\n\n        function _handleMouseDownOnElement(event: MouseEvent) {\n            if (buttons.indexOf(event.button) !== -1) {\n                event.preventDefault();\n                event.stopPropagation();\n                _handleStart(_createTouchFrameFromEvent(event));\n            }\n        }\n\n        function _handleStart(firstTouchFrame: TouchFrame) {\n            if (onlyTouch) {\n                onlyTouch.end();\n            }\n\n            currentTouch = new Touch('MOUSE', anchorElement, firstTouchFrame);\n\n            document.addEventListener(\n                'mousemove',\n                _handleMouseMoveOnDocument,\n                MOUSE_LISTENER_OPTIONS,\n            );\n\n            const mouseUpListenerOnDocument = () => {\n                //console.log('mouseup');\n\n                if (currentTouch) {\n                    currentTouch.end();\n                    currentTouch = null;\n                }\n\n                document.removeEventListener(\n                    'mousemove',\n                    _handleMouseMoveOnDocument,\n                );\n\n                document.removeEventListener(\n                    'mouseup',\n                    mouseUpListenerOnDocument,\n                );\n            };\n\n            document.addEventListener(\n                'mouseup',\n                mouseUpListenerOnDocument,\n                MOUSE_LISTENER_OPTIONS,\n            );\n\n            newTouch(currentTouch);\n            onlyTouch = currentTouch;\n        }\n\n        function _handleMouseMoveOnDocument(event: MouseEvent) {\n            event.preventDefault();\n            event.stopPropagation();\n            if (currentTouch) {\n                currentTouch.move(_createTouchFrameFromEvent(event), false);\n            }\n        }\n\n        function _handleMouseMoveOnElement(event: MouseEvent) {\n            if (event.buttons > 0) {\n            } else {\n                if (!currentTouch) {\n                    newHoverFrame(_createTouchFrameFromEvent(event));\n                }\n            }\n        }\n\n        function _createTouchFrameFromEvent(event: IEvent) {\n            const boundingRect = element.getBoundingClientRect();\n            return new TouchFrame(\n                element,\n                anchorElement,\n                new Vector2(\n                    event.clientX - boundingRect.left,\n                    event.clientY - boundingRect.top,\n                ),\n                performance.now(),\n                rotating,\n            );\n        }\n\n        return () => {\n            //todo return disposer\n        };\n    };\n\n    listener.title = `MOUSE(${buttons.join(',')})`;\n    listener.acceptsEvent = (event: Event) =>\n        event instanceof MouseEvent && buttons.indexOf(event.button) !== -1;\n\n    return listener;\n}\n","import { IEvent } from './../interfaces/IEvent';\nimport { IListener } from '../interfaces/IListener';\nimport { TouchFrame } from '../TouchFrame';\nimport { Touch } from '../Touch';\nimport { Vector2 } from '../Vector2';\n\nconst TOUCH_LISTENER_OPTIONS = {\n    capture: true,\n    passive: false,\n};\n\nexport function createTouchListener(buttons: number[] = [0]): IListener {\n    const listener: any = (\n        element: HTMLElement | SVGElement,\n        anchorElement: HTMLElement,\n        newTouch: (touch: Touch) => void,\n        newHoverFrame: (frame: TouchFrame) => void,\n        immediateDrag: null | IEvent,\n    ) => {\n        element.addEventListener(\n            'touchstart',\n            (event) => _handleTouchesStart(event as any),\n            TOUCH_LISTENER_OPTIONS,\n        );\n        element.addEventListener(\n            'touchmove',\n            (event) => _handleTouchesMove(event as any),\n            TOUCH_LISTENER_OPTIONS,\n        );\n        element.addEventListener(\n            'touchend',\n            (event) => _handleTouchesEnd(event as any),\n            TOUCH_LISTENER_OPTIONS,\n        );\n        element.addEventListener(\n            'touchcancel',\n            (event) => _handleTouchesEnd(event as any),\n            TOUCH_LISTENER_OPTIONS,\n        );\n\n        let currentTouches: { [identifier: number]: Touch } = {};\n\n        function _handleTouchesStart(event: TouchEvent) {\n            event.preventDefault();\n            const touches = event.changedTouches;\n            for (let i = 0, l = touches.length; i < l; i++) {\n                const currentTouch = new Touch(\n                    'TOUCH',\n                    anchorElement,\n                    _createTouchFrameFromEvent(touches[i]),\n                );\n                currentTouches[touches[i].identifier] = currentTouch;\n                newTouch(currentTouch);\n            }\n        }\n\n        function _handleTouchesMove(event: TouchEvent) {\n            event.preventDefault();\n            const touches = event.changedTouches;\n            for (let i = 0, l = touches.length; i < l; i++) {\n                const currentTouch =\n                    currentTouches[touches[i].identifier] || null;\n                if (currentTouch) {\n                    currentTouch.move(\n                        _createTouchFrameFromEvent(touches[i]),\n                        false,\n                    );\n                }\n            }\n        }\n\n        function _handleTouchesEnd(event: TouchEvent) {\n            event.preventDefault();\n            const touches = event.changedTouches;\n            for (let i = 0, l = touches.length; i < l; i++) {\n                const currentTouch =\n                    currentTouches[touches[i].identifier] || null;\n                if (currentTouch) {\n                    currentTouch.move(\n                        _createTouchFrameFromEvent(touches[i]),\n                        true,\n                    );\n                    delete currentTouches[touches[i].identifier];\n                }\n            }\n        }\n\n        function _createTouchFrameFromEvent(event: IEvent) {\n            const boundingRect = element.getBoundingClientRect();\n            return new TouchFrame(\n                element,\n                anchorElement,\n                new Vector2(\n                    event.clientX - boundingRect.left,\n                    event.clientY - boundingRect.top,\n                ),\n                performance.now(),\n            );\n        }\n\n        if (immediateDrag) {\n            setImmediate(() => {\n                const identifier = (immediateDrag as any).touches[0].identifier;\n                //console.log((immediateDrag as any).touches[0].identifier);\n\n                {\n                    //todo maybe DRY this block with block in createMouseListener\n                    //todo better naming in this block\n\n                    const currentTouch = new Touch(\n                        'TOUCH',\n                        anchorElement,\n                        _createTouchFrameFromEvent(\n                            (immediateDrag as any).touches[0],\n                        ),\n                    );\n\n                    const getTouchFromEvent = (event: TouchEvent) =>\n                        Array.from(event.touches).find(\n                            (touch) => touch.identifier === identifier,\n                        );\n\n                    const handleTouchMoveOnDocument = (event: TouchEvent) => {\n                        //todo problems with zoom whole page\n\n                        const touch = getTouchFromEvent(event);\n                        if (touch) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            currentTouch.move(\n                                _createTouchFrameFromEvent(touch),\n                                false,\n                            );\n                        }\n                    };\n                    document.addEventListener(\n                        'touchmove',\n                        handleTouchMoveOnDocument,\n                        TOUCH_LISTENER_OPTIONS,\n                    );\n\n                    const handleTouchUpOnDocument = (event: TouchEvent) => {\n                        //const touch = getTouchFromEvent(event);\n                        //console.log(event.touches);\n                        //console.log(touch);\n\n                        //if (touch) {\n                        currentTouch.end();\n\n                        document.removeEventListener(\n                            'touchmove',\n                            handleTouchMoveOnDocument,\n                        );\n\n                        document.removeEventListener(\n                            'touchend',\n                            handleTouchUpOnDocument,\n                        );\n                        //}\n                    };\n\n                    document.addEventListener(\n                        'touchend',\n                        handleTouchUpOnDocument,\n                        TOUCH_LISTENER_OPTIONS,\n                    );\n\n                    newTouch(currentTouch);\n                    //onlyTouch = currentTouch;\n                }\n            });\n        }\n\n        return () => {\n            //todo return disposer\n        };\n    };\n\n    listener.title = `TOUCH`;\n    listener.acceptsEvent = (event: Event) => event instanceof TouchEvent;\n\n    return listener;\n}\n","import { DrawController } from './drawController/CanvasParticlesRenderer';\nimport { BoundingBox } from './BoundingBox';\nimport { Touch } from './Touch';\nimport { Transformation } from './Transformation';\nimport { MultiTouchController } from './MultiTouchController';\nimport { TouchController } from './TouchController';\nimport { multiTouchTransformations } from './multiTouchTransformations';\nimport { createMouseListener } from './listeners/createMouseListener';\nimport { createTouchListener } from './listeners/createTouchListener';\nimport {\n    svgTransformationDecode,\n    svgTransformationEncode,\n} from './tools/svgTools';\nimport { Vector2 } from './Vector2';\n\nexport {\n    TouchController,\n    MultiTouchController,\n    multiTouchTransformations,\n    Transformation,\n    Vector2,\n    Touch,\n    BoundingBox,\n    createMouseListener, //todo maybe wrap to object listeners\n    createTouchListener,\n    svgTransformationDecode,\n    svgTransformationEncode,\n    DrawController,\n};\n","import { Vector2 } from './../Vector2';\nimport { Scene } from './Scene';\nimport { Particle, IParticleOptions } from './Particle';\nimport { particleOptionsAverage } from '../tools/average';\n\nexport class DrawController {\n    private liveCtx: CanvasRenderingContext2D;\n    private deadCtx: CanvasRenderingContext2D;\n    public deadParticlesCount = 0;\n    private scene: Scene;\n\n    //todo initial do better\n    constructor(quality: Vector2, initialColor: string = '#ffffff') {\n        {\n            const canvas = document.createElement('canvas');\n            canvas.width = quality.x;\n            canvas.height = quality.y;\n            this.liveCtx = canvas.getContext('2d')!;\n        }\n        {\n            const canvas = document.createElement('canvas');\n            canvas.width = quality.x;\n            canvas.height = quality.y;\n            this.deadCtx = canvas.getContext('2d')!;\n            this.deadCtx.fillStyle = initialColor;\n            this.deadCtx.fillRect(\n                0,\n                0,\n                this.deadCtx.canvas.width,\n                this.deadCtx.canvas.height,\n            );\n        }\n\n        this.scene = new Scene(this.liveCtx);\n\n        //todo maybe with run?\n        requestAnimationFrame((now) => this.render(now));\n    }\n\n    private _contexts: CanvasRenderingContext2D[] = [];\n    addContext(context: CanvasRenderingContext2D) {\n        this._contexts.push(context);\n    }\n\n    private _subscribers: (() => void)[] = [];\n    subscribe(callback: () => void) {\n        this._subscribers.push(callback);\n    }\n    private callSubscribers() {\n        for (const subscriber of this._subscribers) {\n            subscriber();\n        }\n    }\n\n    drawPoint(options: IParticleOptions) {\n        const particle = new Particle(options, 1); //todo particle zIndex\n        this.scene.addObject(particle);\n    }\n\n    drawLine(\n        options1: IParticleOptions,\n        options2: IParticleOptions,\n        segmentSize: number,\n    ) {\n        //console.log('options1',options1);\n        //console.log('options2',options2);\n\n        const segmentsCount = Math.ceil(\n            options1.current.position.length(options2.current.position) /\n                segmentSize,\n        );\n\n        for (let i = 0; i < segmentsCount; i++) {\n            const weight1 = i / segmentsCount;\n            const options = particleOptionsAverage(\n                { value: options1, weight: weight1 },\n                { value: options2, weight: 1 - weight1 },\n            );\n            //console.log('options',options);\n            this.drawPoint(options);\n        }\n    }\n\n    get liveParticlesCount(): number {\n        return this.scene.particles.length;\n    }\n\n    private lastRenderNow: null | number = null;\n    private render(now: number) {\n        //this.liveCtx.fillRect(0, 0, this.liveCtx.canvas.width, this.liveCtx.canvas.height);\n\n        if (this.lastRenderNow) {\n            const deadParticles = this.scene.update(\n                (now - this.lastRenderNow) / 1000,\n            );\n            this.deadParticlesCount += deadParticles.length;\n            for (const object of deadParticles.sort(Particle.compare)) {\n                object.render(this.deadCtx);\n            }\n        }\n        this.lastRenderNow = now;\n\n        this.liveCtx.drawImage(this.deadCtx.canvas, 0, 0);\n        this.scene.render();\n\n        for (const ctx of this._contexts) {\n            //ctx.fillRect(0, 0, this.liveCtx.canvas.width, this.liveCtx.canvas.height);\n            ctx.drawImage(\n                this.liveCtx.canvas,\n                0,\n                0,\n                this.liveCtx.canvas.width,\n                this.liveCtx.canvas.height,\n                0,\n                0,\n                ctx.canvas.width,\n                ctx.canvas.height,\n            );\n        }\n\n        this.callSubscribers();\n        requestAnimationFrame((now) => this.render(now));\n    }\n}\n","import { Vector2 } from './../Vector2';\nimport { Particle } from './Particle';\n\nexport class Scene {\n    //private ctx: CanvasRenderingContext2D;\n    public particles: Particle[];\n\n    constructor(private ctx: CanvasRenderingContext2D) {\n        //const { width, height } = sceneElement.getBoundingClientRect();\n        //sceneElement.width = width;\n        //sceneElement.height = height;\n        //this.ctx = sceneElement.getContext('2d')!;\n        this.particles = [];\n    }\n\n    addObject(object: Particle) {\n        this.particles.push(object);\n    }\n\n    render() {\n        //this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n        for (const particle of this.particles.sort(Particle.compare)) {\n            particle.render(this.ctx);\n        }\n    }\n\n    update(delta: number) {\n        for (const object of this.particles) {\n            //console.log(object.position,object.movement);\n            object.update(delta);\n        }\n\n        const live: Particle[] = [];\n        const dead: Particle[] = [];\n\n        for (const particle of this.particles) {\n            if (particle.live) {\n                live.push(particle);\n            } else {\n                dead.push(particle);\n            }\n        }\n\n        this.particles = live;\n        return dead;\n    }\n\n    get size() {\n        return new Vector2(this.ctx.canvas.width, this.ctx.canvas.height);\n    }\n}\n","//todo maybe with polyfill\nexport function sign(x: number): number {\n    if (x === 0) return 0;\n    if (x > 0) return 1;\n    if (x < 0) return -1;\n    return NaN;\n}\n","import { SourceCache } from './Cache';\n\nexport function createImageFromSrc(src: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const image = window.document.createElement('IMG') as HTMLImageElement;\n        image.addEventListener('load', () => resolve(image));\n        image.src = src;\n    });\n}\n\nconst canvasFromSrcCache = new SourceCache<string, HTMLCanvasElement>();\n\nexport async function createCanvasFromSrc(\n    src: string,\n): Promise<HTMLCanvasElement> {\n    if (canvasFromSrcCache.hasItem(src)) {\n        return canvasFromSrcCache.getItem(src)!;\n    }\n    const image = await createImageFromSrc(src);\n    const canvas = window.document.createElement('CANVAS') as HTMLCanvasElement;\n    canvas.width = image.width;\n    canvas.height = image.height;\n    const ctx = canvas.getContext('2d')!; //todo is this canvas usable?\n    ctx.drawImage(image, 0, 0);\n    canvasFromSrcCache.setItem(src, canvas);\n    return canvas;\n}\n\nconst canvasColoredFromSrcCache = new SourceCache<string, HTMLCanvasElement>();\n\nexport async function createColoredCanvasFromSrc(\n    src: string,\n    color: string,\n): Promise<HTMLCanvasElement> {\n    const id = `${src}#${color}`;\n    if (canvasColoredFromSrcCache.hasItem(id)) {\n        return canvasColoredFromSrcCache.getItem(id)!;\n    }\n    const canvas = await createCanvasFromSrc(src);\n    const ctx = canvas.getContext('2d')!; //todo is this canvas usable?\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n    const data = imageData.data;\n\n    // convert image to grayscale\n    var rgbColor = hexToRgb(color);\n\n    for (var p = 0, len = data.length; p < len; p += 4) {\n        if (data[p + 3] == 0) continue;\n        data[p + 0] = rgbColor.r;\n        data[p + 1] = rgbColor.g;\n        data[p + 2] = rgbColor.b;\n        data[p + 3] = 255;\n    }\n\n    const canvasColored = window.document.createElement(\n        'CANVAS',\n    ) as HTMLCanvasElement;\n    canvasColored.width = canvas.width;\n    canvasColored.height = canvas.height;\n    const ctxColored = canvasColored.getContext('2d')!;\n    ctxColored.putImageData(imageData, 0, 0);\n    canvasColoredFromSrcCache.setItem(id, canvasColored);\n    return canvasColored;\n}\n\n//todo to separate file\nfunction hexToRgb(color: string) {\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    color = color.replace(shorthandRegex, function(m, r, g, b) {\n        return r + r + g + g + b + b;\n    });\n\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n    return result\n        ? {\n              r: parseInt(result[1], 16),\n              g: parseInt(result[2], 16),\n              b: parseInt(result[3], 16),\n          }\n        : {\n              r: 0,\n              g: 0,\n              b: 0,\n          };\n}\n","export class SourceCache<TId, TSource> {\n    private storage: { id: TId; source: TSource }[] = [];\n\n    hasItem(id: TId) {\n        return this.storage.some((item) => item.id === id);\n    }\n\n    getItem(id: TId): TSource | null {\n        return (this.storage.find((item) => item.id === id) || { source: null })\n            .source;\n    }\n\n    setItem(id: TId, source: TSource) {\n        return this.storage.push({ id, source });\n    }\n}\n","import { Vector2 } from './../Vector2';\nimport {\n    IParticleOptions,\n    IParticleOptionsExternals,\n} from '../drawController/Particle';\n\nexport type TAverageItems<T> = { value: T; weight: number }[];\n\nexport function average<T>(\n    add: (a: T, b: T) => T,\n    multiply: (a: T, b: number) => T,\n    items: TAverageItems<T>,\n): T {\n    let sum = 0;\n    let count: null | T = null;\n    for (const item of items) {\n        sum += item.weight;\n        const value = multiply(item.value, item.weight);\n        count = !count ? value : add(count, value);\n    }\n    if (!count) {\n        throw new Error(\n            `There must be at least one item when counting average.`,\n        );\n    }\n    if (sum <= 0) {\n        throw new Error(`Sum of weights should be positive number.`);\n    }\n    return multiply(count, 1 / sum);\n}\n\n//todo not used\nexport function vector2Average(...items: TAverageItems<Vector2>) {\n    return average<Vector2>(\n        (a, b) => Vector2.add(a, b),\n        (a, b) => a.scale(b),\n        items,\n    );\n}\n\nfunction particleOptionsExternalsAdd(\n    a: IParticleOptionsExternals,\n    b: IParticleOptionsExternals,\n) {\n    return {\n        position: Vector2.add(a.position, b.position),\n        rotation: a.rotation + b.rotation,\n        widthSize: a.widthSize + b.widthSize,\n    };\n}\n\nfunction particleOptionsExternalsMultiply(\n    a: IParticleOptionsExternals,\n    b: number,\n) {\n    return {\n        position: a.position.scale(b),\n        rotation: a.rotation * b,\n        widthSize: a.widthSize * b,\n    };\n}\n\nexport function particleOptionsAverage(\n    ...items: TAverageItems<IParticleOptions>\n) {\n    return average<IParticleOptions>(\n        (a, b) => ({\n            shapeSrc: a.shapeSrc,\n            shapeCenter: Vector2.add(a.shapeCenter, b.shapeCenter),\n            color: a.color, //todo with color\n            current: particleOptionsExternalsAdd(a.current, b.current),\n            movement: particleOptionsExternalsAdd(a.movement, b.movement),\n            friction: a.friction + b.friction,\n        }),\n        (a, b) => ({\n            shapeSrc: a.shapeSrc,\n            shapeCenter: a.shapeCenter.scale(b),\n            color: a.color, //todo with color\n            current: particleOptionsExternalsMultiply(a.current, b),\n            movement: particleOptionsExternalsMultiply(a.movement, b),\n            friction: a.friction * b,\n        }),\n        items,\n    );\n}\n","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map","\"use strict\";\nvar noop_1 = require('./noop');\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nvar share_1 = require('../operators/share');\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return share_1.share()(this);\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map","\"use strict\";\nvar multicast_1 = require('./multicast');\nvar refCount_1 = require('./refCount');\nvar Subject_1 = require('../Subject');\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map","\"use strict\";\nvar ConnectableObservable_1 = require('../observable/ConnectableObservable');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexports.multicast = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexports.MulticastOperator = MulticastOperator;\n//# sourceMappingURL=multicast.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Observable_1 = require('../Observable');\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar refCount_1 = require('../operators/refCount');\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nexports.connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar range_1 = require('../../observable/range');\nObservable_1.Observable.range = range_1.range;\n//# sourceMappingURL=range.js.map","\"use strict\";\nvar RangeObservable_1 = require('./RangeObservable');\nexports.range = RangeObservable_1.RangeObservable.create;\n//# sourceMappingURL=range.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map","import { TouchFrame } from './TouchFrame';\nimport { MultiTouch } from './MultiTouch';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { Observer } from 'rxjs/Observer';\nimport { TouchController } from './TouchController';\n\nexport class MultiTouchController<TElement> {\n    public ongoingMultiTouches: MultiTouch<TElement | undefined>[] = []; //todo null vs. undefined\n    public multiTouches: Observable<MultiTouch<TElement | undefined>>;\n    private _multiTouchesObserver: Observer<MultiTouch<TElement | undefined>>;\n\n    constructor(\n        public touchController: TouchController,\n        private _elementBinder: (frame: TouchFrame) => TElement | undefined, //todo maybe rename private properties - remove _\n    ) {\n        this.multiTouches = Observable.create(\n            (observer: Observer<MultiTouch<TElement | undefined>>) => {\n                this._multiTouchesObserver = observer;\n            },\n        ).share();\n\n        this.touchController.touches.subscribe((touch) => {\n            const element = this._elementBinder(touch.firstFrame);\n\n            //todo why can not be used find\n            let multiTouch = this.ongoingMultiTouches.filter(\n                (multiTouch) => multiTouch.element === element,\n            )[0];\n\n            if (typeof multiTouch === 'undefined') {\n                multiTouch = new MultiTouch(element, touch);\n                this.ongoingMultiTouches.push(multiTouch);\n                this._multiTouchesObserver.next(multiTouch);\n\n                multiTouch.touches.subscribe(\n                    () => {},\n                    () => {},\n                    () => {\n                        this.ongoingMultiTouches = this.ongoingMultiTouches.filter(\n                            (multiTouch2) => multiTouch2 !== multiTouch,\n                        );\n                    },\n                );\n            } else {\n                multiTouch.addTouch(touch);\n            }\n        });\n    }\n\n    get hoveredElements(): Observable<TElement | undefined> {\n        return Observable.create((observer: Observer<TElement | undefined>) => {\n            this.touchController.hoveredFrames.subscribe((frame) => {\n                observer.next(this._elementBinder(frame));\n            });\n        });\n    }\n\n    get hoveredElementsChanges(): Observable<\n        [TElement | undefined, TElement | undefined]\n    > {\n        return Observable.create(\n            (\n                observer: Observer<\n                    [TElement | undefined, TElement | undefined]\n                >,\n            ) => {\n                let lastElement: TElement | undefined;\n                this.hoveredElements.subscribe((thisElement) => {\n                    if (lastElement !== thisElement) {\n                        observer.next([thisElement, lastElement]);\n                        lastElement = thisElement;\n                    }\n                });\n            },\n        );\n    }\n\n    //todo method for dispose\n}\n","import { Transformation } from './Transformation';\nimport { BoundingBox } from './BoundingBox';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/finally';\nimport 'rxjs/add/operator/share';\nimport { Observer } from 'rxjs/Observer';\nimport { multiTouchTransformations } from './multiTouchTransformations';\nimport { Touch } from './Touch';\n\n//todo multitouch should be extended from this\nexport class MultiTouch<TElement> {\n    public empty: boolean = true;\n    public ongoingTouches: Touch[] = [];\n    public touches: Observable<Touch>;\n    private _touchesObserver: Observer<Touch>;\n\n    constructor(\n        public element: TElement, //todo this should be external\n        public firstTouch: Touch,\n    ) {\n        this.touches = Observable.create((observer: Observer<Touch>) => {\n            this._touchesObserver = observer;\n            setImmediate(() => this.addTouch(firstTouch));\n        }).share();\n    }\n\n    addTouch(touch: Touch) {\n        this.ongoingTouches.push(touch);\n        this._touchesObserver.next(touch);\n\n        touch.frames.subscribe(\n            (frame) => {\n                if (\n                    touch.firstFrame.position.length(frame.position) >=\n                    5 /*todo to config*/\n                ) {\n                    this.empty = false;\n                }\n            },\n            () => {\n                //todo is empty functions needed - if yes create empty function in tools\n            },\n            () => {\n                this.ongoingTouches = this.ongoingTouches.filter(\n                    (touch2) => touch2 !== touch,\n                );\n                if (this.ongoingTouches.length === 0) {\n                    this._touchesObserver.complete();\n                }\n            },\n        );\n    }\n\n    get ongoingTouchesChanges(): Observable<Touch[]> {\n        return Observable.create((observer: Observer<Touch[]>) => {\n            this.touches.subscribe(\n                (touch) => {\n                    observer.next(this.ongoingTouches);\n                    touch.frames.subscribe(\n                        (touch) => {},\n                        () => {},\n                        () => {\n                            setImmediate(() =>\n                                observer.next(this.ongoingTouches),\n                            );\n                        },\n                    );\n                },\n                () => {},\n                () => {\n                    observer.complete();\n                },\n            );\n        });\n    }\n\n    get ongoingPositionsChanges(): Observable<Touch[]> {\n        return Observable.create((observer: Observer<Touch[]>) => {\n            let subscriptions: Subscription[] = [];\n            this.ongoingTouchesChanges.subscribe(\n                (touches: Touch[]) => {\n                    for (const subscription of subscriptions) {\n                        subscription.unsubscribe();\n                    }\n\n                    subscriptions = touches.map((touch) =>\n                        touch.frames.subscribe(() => {\n                            observer.next(touches);\n                        }),\n                    );\n                },\n                () => {},\n                () => {\n                    observer.complete();\n                },\n            );\n        });\n    }\n\n    transformations(\n        boundingBox: BoundingBox = BoundingBox.One(),\n    ): Observable<Transformation> {\n        return multiTouchTransformations(this, boundingBox);\n    }\n\n    toString() {\n        return `MultiTouch`;\n    }\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar finally_1 = require('../../operator/finally');\nObservable_1.Observable.prototype.finally = finally_1._finally;\nObservable_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map","\"use strict\";\nvar finalize_1 = require('../operators/finalize');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return finalize_1.finalize(callback)(this);\n}\nexports._finally = _finally;\n//# sourceMappingURL=finally.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nexports.finalize = finalize;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(callback));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finalize.js.map","import { IListener } from './interfaces/IListener';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { Observer } from 'rxjs/Observer';\nimport { TouchFrame } from './TouchFrame';\nimport { createMouseListener } from './listeners/createMouseListener';\nimport { createTouchListener } from './listeners/createTouchListener';\nimport { Touch } from './Touch';\nimport { IEvent } from './interfaces/IEvent';\n\n//todo multitouch should be extended from this\nexport class TouchController {\n    public touches: Observable<Touch>;\n    public hoveredFrames: Observable<TouchFrame>;\n    private _touchesObserver: Observer<Touch>;\n    private _hoveredFramesObserver: Observer<TouchFrame>;\n\n    static fromCanvas(canvas: HTMLCanvasElement) {\n        return new TouchController([canvas], canvas, true);\n    }\n\n    constructor(\n        public elements: (HTMLElement | SVGElement)[], //todo syntax sugar if set only one element\n        public anchorElement: HTMLElement,\n        setListeners = true,\n    ) {\n        //todo HTMLElement vs Element\n        this.touches = Observable.create((observer: Observer<Touch>) => {\n            this._touchesObserver = observer;\n        }).share();\n\n        this.hoveredFrames = Observable.create(\n            (observer: Observer<TouchFrame>) => {\n                this._hoveredFramesObserver = observer;\n            },\n        ).share();\n\n        if (setListeners) {\n            this.addListener(createMouseListener());\n            this.addListener(createMouseListener([1, 2], true));\n            this.addListener(createTouchListener());\n        }\n    }\n\n    private listeners: IListener[] = [];\n\n    addListener(listener: IListener) {\n        this.listeners.push(listener);\n        for (const element of this.elements) {\n            this.callListenerOnElement(listener, element, null);\n        }\n    }\n\n    addElement(\n        element: HTMLElement | SVGElement,\n        immediateDrag: null | Event & IEvent = null,\n    ) {\n        this.elements.push(element);\n        for (const listener of this.listeners) {\n            if (immediateDrag && listener.acceptsEvent(immediateDrag)) {\n                this.callListenerOnElement(listener, element, immediateDrag);\n                //immediateDrag = null;//todo maybe create helper var dragging.\n            } else {\n                this.callListenerOnElement(listener, element, null);\n            }\n        }\n    }\n\n    private callListenerOnElement(\n        listener: IListener,\n        element: HTMLElement | SVGElement,\n        immediateDrag: null | IEvent,\n    ) {\n        listener(\n            element,\n            this.anchorElement,\n            (touch: Touch) => this._touchesObserver.next(touch),\n            (frame: TouchFrame) => {\n                if (typeof this._hoveredFramesObserver !== 'undefined') {\n                    this._hoveredFramesObserver.next(frame);\n                }\n            },\n            immediateDrag,\n        );\n        //todo array of listeners disposers\n    }\n\n    emulateTouch(touch: Touch) {\n        setImmediate(() => {\n            this._touchesObserver.next(touch);\n        });\n    }\n\n    //todo method for dispose\n}\n"],"sourceRoot":""}